css namespaces module level 3 css namespaces module level 3 w3c recommendation 29 september 2011 edited in place 20 march 2014 this version http www.w3.org tr 2014 rec-css-namespaces-3-20140320 latest version http www.w3.org tr css-namespaces-3 editor s draft http dev.w3.org csswg css-namespaces previous version http www.w3.org tr 2011 rec-css3-namespace-20110929 feedback www-style@w3.org with subject line css-namespaces message topic archives test suite http test.csswg.org suites css3-namespace 20090210 editors elika j. etemad invited expert former editors anne van kesteren opera software asa peter linss netscape communications chris lilley w3c please check the errata for any errors or issues reported since publication. see also translations. copyright 2014 w3c mit ercim keio beihang all rights reserved. w3c liability trademark and document use rules apply. abstract this css namespaces module defines the syntax for using namespaces in css. it defines the namespace rule for declaring the default namespace and binding namespaces to namespace prefixes and it also defines a syntax that other specifications can adopt for using those prefixes in namespace-qualified names. css is a language for describing the rendering of structured documents such as html and xml on screen on paper in speech etc. status of this document this section describes the status of this document at the time of its publication. other documents may supersede this document. a list of current w3c publications and the latest revision of this technical report can be found in the w3c technical reports index at http www.w3.org tr this document was produced by the css working group as a recommendation. this document has been reviewed by w3c members by software developers and by other w3c groups and interested parties and is endorsed by the director as a w3c recommendation. it is a stable document and may be used as reference material or cited from another document. w3c s role in making the recommendation is to draw attention to the specification and to promote its widespread deployment. this enhances the functionality and interoperability of the web. w3c encourages everybody to implement this specification. comments may be sent to the archived public mailing list www-style@w3.org see instructions when sending e-mail please put the text css-namespaces-3 in the subject preferably like this css-namespaces-3 summary of comment this document was produced by a group operating under the 5 february 2004 w3c patent policy. w3c maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent. for details of the changes since the previous version see the changes section. table of contents 1 introduction 2conformance 2.1 terminology 3declaring namespaces the namespace rule 3.1 syntax 3.2 scope 3.3 declaring prefixes 4 css qualified names changes acknowledgments references normative references informative references index property index 1 introduction this section is non-normative. this css namespaces module defines syntax for using namespaces in css. it defines the namespace rule for declaring a default namespace and for binding namespaces to namespace prefixes. it also defines a syntax for using those prefixes to represent namespace-qualified names. it does not define where such names are valid or what they mean that depends on their context and is defined by a host language such as selectors select that references the syntax defined in the css namespaces module. note that a css client that does not support this module will if it properly conforms to css s forward-compatible parsing rules ignore all namespace rules as well as all style rules that make use of namespace qualified names. the syntax of delimiting namespace prefixes in css was deliberately chosen so that these css clients would ignore the style rules rather than possibly match them incorrectly. 2 conformance a document or implementation cannot conform to css namespaces alone but can claim conformance to css namespaces if it satisfies the conformance requirements in this specification when implementing css or another host language that normatively references this specification. conformance to css namespaces is defined for two classes style sheet a css style sheet or a complete unit of another host language that normatively references css namespaces interpreter someone or something that interprets the semantics of a style sheet. css user agents fall under this category. the conformance requirements are expressed with a combination of descriptive assertions and rfc 2119 terminology. the key words must must not required shall shall not should should not recommended may and optional in the normative parts of this document are to be interpreted as described in rfc 2119. however for readability these words do not appear in all uppercase letters in this specification. all of the text of this specification is normative except sections explicitly marked as non-normative examples and notes. rfc2119 examples in this specification are introduced with the words for example or are set apart from the normative text with class example like this this is an example of an informative example. informative notes begin with the word note and are set apart from the normative text with class note like this note this is an informative note. 2.1 terminology besides terms introduced by this specification css namespaces uses the terminology defined in namespaces in xml 1.0. xml-names however the syntax defined here is not restricted to representing xml element and attribute names and may represent other kinds of namespaces as defined by the host language. in css namespaces a namespace name consisting of the empty string is taken to represent the null namespace or lack of a namespace. for example given the namespace declarations namespace empty namespace the type selectors elem elem and empty elem are equivalent. 3 declaring namespaces the namespace rule the namespace at-rule declares a namespace prefix and associates it with a given namespace name a string this namespace prefix can then be used in namespace-qualified names such as the css qualified names defined below. namespace http www.w3.org 1999 xhtml namespace svg http www.w3.org 2000 svg the first rule declares a default namespace http www.w3.org 1999 xhtml to be applied to names that have no explicit namespace component. the second rule declares a namespace prefix svg that is used to apply the namespace http www.w3.org 2000 svg where the svg namespace prefix is used. in css namespaces as in namespaces in xml 1.0 the prefix is merely a syntactic construct it is the expanded name the tuple of local name and namespace name that is significant. thus the actual prefixes used in a css style sheet and whether they are defaulted or not are independent of the namespace prefixes used in the markup and whether these are defaulted or not. for example given the following xml document qml elem xmlns qml http example.com q-markup qml elem and the following namespace declarations at the beginning of a css file namespace q http example.com q-markup namespace lq http example.com q-markup the selectors q elem and lq elem in that css file would both match the element qml elem the selector qml elem would be invalid because css namespaces only recognize prefixes declared in css not those declared by the document language. 3.1 syntax the syntax for the namespace rule is as follows using the notation from the grammar appendix of css 2.1 css21 namespace namespace_sym s namespace_prefix s string uri s s namespace_prefix ident with the new token n a m e s p a c e return namespace_sym any namespace rules must follow all charset and import rules and precede all other non-ignored at-rules and style rules in a style sheet. for css syntax this adds namespace s cdo cdc immediately after import s cdo cdc in the stylesheet grammar. a syntactically invalid namespace rule whether malformed or misplaced must be ignored. a css style sheet containing an invalid namespace rule is not a valid style sheet. a uri string parsed from the uri syntax must be treated as a literal string as with the string syntax no uri-specific normalization is applied. all strings including the empty string and strings representing invalid uris are valid namespace names in namespace declarations. 3.2 scope the namespace prefix is declared only within the style sheet in which its namespace rule appears. it is not declared in any style sheets importing or imported by that style sheet nor in any other style sheets applying to the document. 3.3 declaring prefixes a namespace prefix once declared represents the namespace for which it was declared and can be used to indicate the namespace of a namespace-qualified name. namespace prefixes are like css counter names case-sensitive. if in the namespace declaration the namespace prefix is omitted then the namespace so declared is the default namespace. the default namespace may apply to names that have no explicit namespace prefix modules that employ namespace prefixes must define in which contexts the default namespace applies. for example following xml-names in selectors select the default namespace applies to type selectors but it does not apply to attribute selectors. there is no default value for the default namespace modules that assign unqualified names to the default namespace must define how those unqualified names are to be interpreted when no default namespace is declared. note note that using default namespaces in conjunction with type selectors can cause uas that support default namespaces and uas that don t support default namespaces to interpret selectors differently. if a namespace prefix or default namespace is declared more than once only the last declaration shall be used. declaring a namespace prefix or default namespace more than once is nonconforming. 4 css qualified names a css qualified name is a name explicitly located within associated with a namespace. to form a qualified name in css syntax a namespace prefix that has been declared within scope is prepended to a local name such as an element or attribute name separated by a vertical bar u+007c the prefix representing the namespace for which it has been declared indicates the namespace of the local name. the prefix of a qualified name may be omitted to indicate that the name belongs to no namespace i.e. that the namespace name part of the expanded name has no value. some contexts as defined by the host language may allow the use of an asterisk u+002a as a wildcard prefix to indicate a name in any namespace including no namespace. given the namespace declarations namespace toto http toto.example.org namespace http example.com foo in a context where the default namespace applies toto a represents the name a in the http toto.example.org namespace. b represents the name b that belongs to no namespace. c represents the name c in any namespace including no namespace. d represents the name d in the http example.com foo namespace. the syntax for the portion of a css qualified name before the local name is given below both for qualified names that allow wildcard prefixes wqname and for qualified names that disallow wildcard prefixes qname the syntax uses notation from the grammar appendix of css 2.1. css21 note this means that comments but not white space are implicitly allowed between tokens. qname_prefix namespace_prefix wqname_prefix namespace_prefix qname qname_prefix ident wqname wqname_prefix ident wqwname wqname_prefix ident css qualified names can be used in for example selectors and property values as described in other modules. those modules must define handling of namespace prefixes that have not been properly declared. such handling should treat undeclared namespace prefixes as a parsing error that will cause the selector or declaration etc. to be considered invalid and in css ignored. for example the selectors module select defines a type selector with an undeclared namespace prefix to be an invalid selector and css css21 requires style rules with an invalid selector to be completely ignored. changes changes made since the 29 september 2011 recommendation added predefined qname wqname and wqwname productions to make those constructs easier for other specs to use. acknowledgments this draft borrows heavily from earlier drafts on css namespace support by chris lilley and by peter linss and early unpublished drafts on css and xml by h kon lie and bert bos and xml namespaces and css by bert bos and steven pemberton. many current and former members of the css working group have contributed to this document. discussions on www-style@w3.org and in other places have also contributed ideas to this specification. special thanks goes to l. david baron karl dubost ian hickson bj rn h hrmann and lachlan hunt for their comments. references normative references css21 bert bos et al. cascading style sheets level 2 revision 1 css 2.1 specification. 7 june 2011. w3c recommendation. url http www.w3.org tr 2011 rec-css2-20110607 rfc2119 s. bradner. key words for use in rfcs to indicate requirement levels. url http www.ietf.org rfc rfc2119.txt xml-names tim bray et al. namespaces in xml 1.0 third edition 8 december 2009. w3c recommendation. url http www.w3.org tr 2009 rec-xml-names-20091208 informative references select tantek elik et al. selectors level 3. 29 september 2011. w3c recommendation. url http www.w3.org tr 2011 rec-css3-selectors-20110929 index css qualified name 4 default namespace 3.3 expanded name 3 interpreter 2 namespace prefix 3.3 style sheet 2 property index no properties defined. 