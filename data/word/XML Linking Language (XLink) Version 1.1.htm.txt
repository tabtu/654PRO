xml linking language xlink version 1.1 xml linking language xlink version 1.1 w3c recommendation 06 may 2010 this version http www.w3.org tr 2010 rec-xlink11-20100506 latest version http www.w3.org tr xlink11 previous versions http www.w3.org tr 2010 pr-xlink11-20100225 http www.w3.org tr 2008 wd-xlink11-20080331 editors steve derose brown university scholarly technology group eve maler sun microsystems david orchard jamcracker norman walsh mark logic corporation version 1.1 please refer to the errata for this document which may include normative corrections. see also translations. this document is also available in these non-normative formats xml. copyright 2010 w3c mit ercim keio all rights reserved. w3c liability trademark and document use rules apply. abstract this specification defines the xml linking language xlink version 1.1 which allows elements to be inserted into xml documents in order to create and describe links between resources. it uses xml syntax to create structures that can describe links similar to the simple unidirectional hyperlinks of today s html as well as more sophisticated links. status of this document this section describes the status of this document at the time of its publication. other documents may supersede this document. a list of current w3c publications and the latest revision of this technical report can be found in the w3c technical reports index at http www.w3.org tr this document is a w3c recommendation. it implements all of the xlink 1.1 requirements documented in extending xlink 1.0 this document is a product of the xml core working group as part of the w3c xml activity. this edition supersedes the previous w3c recommendation of 27 june 2001. please report errors in this document to the public www-xml-linking-comments@w3.org mailing list public archives are available. there is an implementation report for xlink 1.1. a test suite is maintained to help assessing the conformance to this specification. this document has been reviewed by w3c members by software developers and by other w3c groups and interested parties and is endorsed by the director as a w3c recommendation. it is a stable document and may be used as reference material or cited from another document. w3c s role in making the recommendation is to draw attention to the specification and to promote its widespread deployment. this enhances the functionality and interoperability of the web. this document was produced by a group operating under the 5 february 2004 w3c patent policy. w3c maintains a public list of any patent disclosures made in connection with the deliverables of the group that page also includes instructions for disclosing a patent. an individual who has actual knowledge of a patent which the individual believes contains essential claim s must disclose the information in accordance with section 6 of the w3c patent policy. table of contents 1 introduction 1.1 origin and goals 2 xlink concepts 2.1 links and resources 2.2 arcs traversal and behavior 2.3 resources in relation to the physical location of a linking element 3 xlink processing and conformance 3.1 processing dependencies 3.2 markup conformance 3.3 application conformance 3.3.1 full conformance 3.3.2 simple conformance 4 xlink markup design 4.1 xlink attribute usage patterns 4.2 xlink element type relationships 4.3 attribute value defaulting 4.4 integrating xlink usage with other markup 4.5 using xlink with legacy markup 5 xlink elements and attributes 5.1 extended links extended-type element 5.1.1 local resources for an extended link resource-type element 5.1.2 remote resources for an extended link locator-type element 5.1.3 traversal rules for an extended link arc-type element 5.1.4 titles for extended links locators and arcs title-type element 5.1.5 locating linkbases special arc role 5.2 simple links simple-type element 5.3 xlink element type attribute type 5.4 locator attribute href 5.5 semantic attributes role arcrole and title 5.6 behavior attributes show and actuate 5.6.1 show attribute 5.6.2 actuate attribute 5.7 traversal attributes label from and to appendices a references a.1 normative references a.2 non-normative references b sample dtd non-normative c sample xml schema non-normative d sample relax ng grammar non-normative e changes from xlink 1.0 non-normative 1 introduction this specification defines the xml linking language xlink which allows elements to be inserted into xml documents in order to create and describe links between resources. xlink provides a framework for creating both basic unidirectional links and more complex linking structures. it allows xml documents to assert linking relationships among more than two resources associate metadata with a link express links that reside in a location separate from the linked resources an important application of xlink is in hypermedia systems that have hyperlinks. a simple case of a hyperlink is an html a element which has these characteristics the hyperlink uses iris as its locator technology. the hyperlink is expressed at one of its two ends. the hyperlink identifies the other end although a server may have great freedom in finding or dynamically creating that destination users can initiate traversal only from the end where the hyperlink is expressed to the other end. the hyperlink s effect on windows frames go-back lists style sheets in use and so on is determined by user agents not by the hyperlink itself. for example traversal of a links normally replaces the current view perhaps with a user option to open a new window. this set of characteristics is powerful but the model that underlies them limits the range of possible hyperlink functionality. the model defined in this specification shares with html the use of iri technology but goes beyond html in offering features previously available only in dedicated hypermedia systems that make hyperlinking more scalable and flexible. along with providing linking data structures xlink provides a minimal link behavior model higher-level applications layered on xlink will often specify alternate or more sophisticated rendering and processing treatments. integrated treatment of specialized links used in other technical domains such as foreign keys in relational databases and reference values in programming languages is outside the scope of this specification. for languages such as css that wish to identify hypertext links in a document we suggest that any local element from which xlink specifies that traversal is possible and which the application treats as if it specified actuate onrequest be treated as a hyperlink source anchor. 1.1 origin and goals the design of xlink has been informed by knowledge of established hypermedia systems and standards. the following standards have been especially influential html html defines several element types that represent links. hytime iso iec 10744 defines inline and inbound and third-party link structures and some semantic features including traversal control and presentation of objects. text encoding initiative guidelines tei provides structures for creating links aggregate objects and link collections. many other linking systems have also informed the design of xlink especially dexter fress ohs microcosm and intermedia see the xlink requirements document xlreq for a thorough explanation of requirements for the design of xlink. 2 xlink concepts this section describes the terms and concepts that are essential to understanding xlink without discussing the syntax used to create xlink constructs. a few additional terms are introduced in later parts of this specification. 2.1 links and resources definition an xlink link is an explicit relationship between resources or portions of resources. definition it is made explicit by an xlink linking element which is an xlink-conforming xml element that asserts the existence of a link. there are six xlink elements only two of them are considered linking elements. the others provide various pieces of information that describe the characteristics of a link. the term link as used in this specification refers only to an xlink link though nothing prevents non-xlink constructs from serving as links. the notion of resources is universal to the world wide web. definition as discussed in rfc 3986 a resource is any addressable unit of information or service. examples include files images documents programs and query results. the means used for addressing a resource is a iri internationalized resource identifier reference described more in 5.4 locator attribute href it is possible to address a portion of a resource. for example if the whole resource is an xml document a useful portion of that resource might be a particular element inside the document. following a link to it might result for example in highlighting that element or scrolling to that point in the document. definition when a link associates a set of resources those resources are said to participate in the link. even though xlink links must appear in xml documents they are able to associate all kinds of resources not just xml-encoded ones. one of the common uses of xlink is to create hyperlinks. definition a hyperlink is a link that is intended primarily for presentation to a human user. nothing in xlink s design however prevents it from being used with links that are intended solely for consumption by computers. 2.2 arcs traversal and behavior definition using or following a link for any purpose is called traversal. even though some kinds of link can associate arbitrary numbers of resources traversal always involves a pair of resources or portions of them definition the source from which traversal is begun is the starting resource and definition the destination is the ending resource note that the term resource used in this fashion may at times apply to a resource portion not a whole resource. definition information about how to traverse a pair of resources including the direction of traversal and possibly application behavior information as well is called an arc if two arcs in a link specify the same pair of resources but they switch places as starting and ending resources then the link is multidirectional which is not the same as merely going back after traversing a link. 2.3 resources in relation to the physical location of a linking element definition a local resource is an xml element that participates in a link by virtue of having as its parent or being itself a linking element definition any resource or resource portion that participates in a link by virtue of being addressed with an iri reference is considered a remote resource even if it is in the same xml document as the link or even inside the same linking element. put another way a local resource is specified by value and a remote resource is specified by reference. definition an arc that has a local starting resource and a remote ending resource goes outbound that is away from the linking element. examples of links with such an arc are the html a element hytime clinks and text encoding initiative xref elements. definition if an arc s ending resource is local but its starting resource is remote then the arc goes inbound. definition if neither the starting resource nor the ending resource is local then the arc is a third-party arc. though it is not required any one link typically specifies only one kind of arc throughout and thus might be referred to as an inbound outbound or third-party link. to create a link that emanates from a resource to which you do not have or choose not to exercise write access or from a resource that offers no way to embed linking constructs it is necessary to use an inbound or third-party arc. when such arcs are used the requirements for discovery of the link are greater than for outbound arcs. definition documents containing collections of inbound and third-party links are called link databases or linkbases. 3 xlink processing and conformance this section details processing and conformance requirements on xlink applications and markup. definition the key words must must not required shall shall not should should not recommended may and optional in this specification are to be interpreted as described in rfc 2119 3.1 processing dependencies xlink processing depends on xml xml names xml base rfc 3987 and charmod fundamentals 3.2 markup conformance an xml element conforms to xlink if it has a type attribute from the xlink namespace whose value is one of simple extended locator arc resource title or none and it adheres to the conformance constraints imposed by the chosen xlink element type as prescribed in this specification or it does not have a type attribute from the xlink namespace and it adheres to the conformance constraints imposed by the xlink simple element type as prescribed in this specification. it does not have any attributes in the xlink namespace other than type href role arcrole title show actuate label from and to. content conforming to xlink must conform to charmod fundamentals this specification imposes no particular constraints on schemas conformance applies only to elements and attributes. 3.3 application conformance an xlink application is any software module that interprets well-formed xml documents containing xlink elements and attributes or xml information sets xis containing information items and properties corresponding to xlink elements and attributes. this document refers to elements and attributes but all specifications herein apply to their information set equivalents as well. xlink defines two conformance levels for an xlink application simple and full. 3.3.1 full conformance an application satisfies the constraints of full conformance if it observes the mandatory conditions must for applications set forth in this specification and for any recommended or optional conditions should and may it chooses to observe it observes them in the way prescribed and it performs markup conformance testing according to all the conformance constraints appearing in this specification. it applies xlink semantics only to those elements which satisfy the markup conformance criteria outlined in 3.2 markup conformance. applications implementing xlink must conform to charmod fundamentals 3.3.2 simple conformance an application satisfies the constraints of simple conformance if it is fully conformant with respect to simple links. in other words the processor may ignore any link which specifies an xlink type other than simple if the xlink href attribute is specified and the xlink type attribute is not specified the element must be processed as if xlink type specified simple an application which claims simple conformance may ignore all other xlink elements. 4 xlink markup design this section describes the design of xlink s markup vocabulary. link markup needs to be recognized reliably by xlink applications in order to be traversed and handled properly. xlink uses the mechanism described in the namespaces in xml recommendation xml names to accomplish recognition of the constructs in the xlink vocabulary. the xlink namespace defined by this specification has the following uri http www.w3.org 1999 xlink as dictated by xml names the use of xlink elements and attributes requires declaration of the xlink namespace. for example the following declaration would make the prefix xlink available within the myelement element to represent the xlink namespace myelement xmlns xlink http www.w3.org 1999 xlink myelement note most code examples in this specification do not show an xlink namespace declaration. the xlink prefix is used throughout to stand for the declaration of the xlink namespace on elements in whose scope the so-marked attribute appears on the same element that bears the attribute or on some ancestor element whether or not an xlink namespace declaration is present in the example. xlink s namespace provides global attributes for use on elements that are in any arbitrary namespace. the global attributes are type href role arcrole title show actuate label from and to. all other attributes and all elements in the xlink namespace are reserved. document creators use the xlink global attributes to make the elements in their own namespace or even in a namespace they do not control recognizable as xlink elements. the type attribute indicates the xlink element type simple extended locator arc resource or title the element type dictates the xlink-imposed constraints that such an element must follow and the behavior of xlink applications on encountering the element. following is an example of a crossreference element from a non-xlink namespace that has xlink global attributes my crossreference xmlns my http example.com xmlns xlink http www.w3.org 1999 xlink xlink type simple xlink href students.xml xlink role http www.example.com linkprops studentlist xlink title student list xlink show new xlink actuate onrequest current list of students my crossreference using global attributes always requires the use of namespace prefixes on the individual attributes. in xml linking language xlink version 1.0 xlink elements are identified by the presence of an xlink type attribute. in xlink 1.1 xlink elements are identified by the presence of either an xlink type attribute or an xlink href attribute if an element has an xlink type attribute then that attribute must have one of the following values simple extended locator arc resource or title and the element must adhere to the conformance constraints imposed by that xlink element type. if an element has an xlink href attribute but does not have an xlink type attribute then it is treated exactly as if it had an xlink type attribute with the value simple 4.1 xlink attribute usage patterns while the xlink attributes are considered global by virtue of their use of the namespace mechanism their allowed combinations on any one xlink element type depend greatly on the value of the special type attribute see 5.3 xlink element type attribute type for more information for the element on which they appear. the conformance constraint notes in this specification detail their allowed usage patterns. following is a summary of the element types columns on which the global attributes rows are allowed with an indication of whether a value is required r or optional o simple extended locator arc resource title type o r r r r r href o r role o o o o arcrole o o title o o o o o show o o actuate o o label o o from o to o at least one of type or href must be specified. see also b sample dtd c sample xml schema and d sample relax ng grammar for examples of non-normative schemas that illustrate the allowed patterns of attributes. this specification uses the convention xxx-type element to refer to elements that must adhere to a named set of constraints associated with an xlink element type no matter what name the element actually has. for example locator-type element would refer to all of the following elements locator xlink type locator loc xlink type locator my pointer xlink type locator 4.2 xlink element type relationships various xlink element types have special meanings dictated by this specification when they appear as direct children of other xlink element types. following is a summary of the child element types that play a significant role in particular parent element types. other combinations are not conformant. parent type significant child types simple none extended locator arc resource title locator title arc title resource none title none 4.3 attribute value defaulting using xlink potentially involves using a large number of attributes for supplying important link information. in cases where the values of the desired xlink attributes are unchanging across individual instances in all the documents of a certain type attribute value defaults fixed or not may be added to a dtd or schema so that the attributes do not have to appear physically on element start-tags. for example if attribute defaults were provided for the xmlns xlink xmlns my type show and actuate attributes in the example in the introduction to 4 xlink markup design the example would look as follows my crossreference xlink href students.xml xlink role http www.example.com linkprops studentlist xlink title student list current list of students my crossreference information sets that have been created under the control of a dtd have all attribute values filled in. note however that parsers are not required to process the external subset. applications such as web browsers that do not process the external subset will not be aware of any default values identified therein. note also that using the attribute value default technique to specify the xlink namespace declaration has no equivalent in relax ng xml schema part 1 structures or other modern schema languages. while it can be used when dtd-informed parsing is performed it poses an interoperability risk and should be used with care. 4.4 integrating xlink usage with other markup this specification defines only attributes and attribute values in the xlink namespace. there is no restriction on using non-xlink attributes alongside xlink attributes. in addition most xlink attributes are optional and the choice of simple or extended link is up to the markup designer or document creator so a dtd or other schema that uses xlink features need not use or declare the entire set of xlink s attributes. finally while this specification identifies the minimum constraints on xlink markup schemas that use xlink are free to tighten these constraints. the use of xlink does not absolve a valid document from conforming to the constraints expressed in its governing schema. following is an example of a crossreference element with both xlink and non-xlink attributes my crossreference xmlns my http example.com my lastedited 2000-06-10 xmlns xlink http www.w3.org 1999 xlink xlink type simple xlink href students.xml current list of students my crossreference 4.5 using xlink with legacy markup because xlink s global attributes require the use of namespace prefixes non-xlink-based links in legacy documents generally do not serve as conforming xlink constructs as they stand even if attribute value defaulting is used. for example xhtml 1.0 has an a element with an href attribute but because the attribute is a local one attached to the a element in the xhtml namespace it is not the same as an xlink href global attribute in the xlink namespace. this specification defines xlink markup that is what combinations xlink attributes and what arrangements of elements with xlink attributes are conformant. it also defines the xlink semantics of such conformant markup. when xlink is used on elements that have other attributes or related elements with linking semantics xlink can not and does not attempt to define the semantics of such combinations. if an element allows such possibly conflicting markup to occur it should specify the semantics of the result. 5 xlink elements and attributes xlink offers two kinds of links extended links extended links offer full xlink functionality such as inbound and third-party arcs as well as links that have arbitrary numbers of participating resources. as a result their structure can be fairly complex including elements for pointing to remote resources elements for containing local resources elements for specifying arc traversal rules and elements for specifying human-readable resource and arc titles. xlink defines a way to give an extended link special semantics for finding linkbases used in this fashion an extended link helps an xlink application process other links. simple links simple links offer shorthand syntax for a common kind of link an outbound link with exactly two participating resources into which category html-style a and img links fall because simple links offer less functionality than extended links they have no special internal structure. while simple links are conceptually a subset of extended links they are syntactically different. for example to convert a simple link into an extended link several structural changes would be needed. the following sections define the xlink elements and attributes. 5.1 extended links extended-type element definition an extended link is a link that associates an arbitrary number of resources. the participating resources may be any combination of remote and local. the only kind of link that is able to have inbound and third-party arcs is an extended link. typically extended linking elements are stored separately from the resources they associate for example in entirely different documents thus extended links are important for situations where the participating resources are read-only or where it is expensive to modify and update them but inexpensive to modify and update a separate linking element or where the resources are in formats with no native support for embedded links such as many multimedia formats the following diagram shows an extended link that associates five remote resources. this could represent for example information about a student s course load one resource being a description of the student another being a description of the student s academic advisor two resources representing courses that the student is attending and the last resource representing a course that the student is auditing. without the extended link the resources might be entirely unrelated for example they might be in five separate documents. the lines emanating from the extended link represent the association it creates among the resources. however notice that the lines do not have directionality. directionality is expressed with traversal rules without such rules being provided the resources are associated in no particular order with no implication as to whether and how individual resources are accessed. the following diagram shows an extended link that associates five remote resources and one local resource a special element inside the extended link element this could represent the same sort of course-load example as described above with the addition of the student s grade point average stored locally. again the lines represent mere association of the six resources without traversal directions or behaviors implied. the xlink element type for extended links is any element with an attribute in the xlink namespace called type with a value of extended the extended-type element may contain a mixture of the following elements in any order possibly along with other content and markup locator-type elements that address the remote resources participating in the link arc-type elements that provide traversal rules among the link s participating resources title-type elements that provide human-readable labels for the link resource-type elements that supply local resources that participate in the link it is not an error for an extended-type element to associate fewer than two resources. if the link has only one participating resource or none at all it is simply untraversable. such a link may still be useful for example to associate properties with a single resource by means of xlink attributes or to provide a placeholder for link information that will be populated eventually. subelements of the simple or extended type anywhere inside a parent extended-type element are not conformant. subelements of the locator arc or resource type that are not direct children of an extended-type element are not conformant. the extended-type element may have the semantic attributes role and title see 5.5 semantic attributes role arcrole and title they supply semantic information about the link as a whole the role attribute indicates a property that the entire link has and the title attribute indicates a human-readable description of the entire link. it is not conformant for other xlink attributes to be present on the element. if both a title attribute and one or more title-type elements are present they have no xlink-specified relationship a higher-level application built on xlink will likely want to specify appropriate treatment for example precedence in this case. example sample extended-type element declarations and instance following is a non-normative set of dtd declarations for an extended-type element and its subelements. parts of this example are reused throughout this specification. note that the type attribute and some other attributes are defaulted in the dtd in order to highlight the attributes that are changing on a per-instance basis. element courseload tooltip person course gpa go attlist courseload xmlns xlink cdata fixed http www.w3.org 1999 xlink xlink type extended fixed extended xlink role cdata implied xlink title cdata implied element tooltip any attlist tooltip xlink type title fixed title xml lang cdata implied element person empty attlist person xlink type locator fixed locator xlink href cdata required xlink role cdata implied xlink title cdata implied xlink label nmtoken implied element course empty attlist course xlink type locator fixed locator xlink href cdata required xlink role cdata fixed http www.example.com linkprops course xlink title cdata implied xlink label nmtoken implied gpa grade point average element gpa any attlist gpa xlink type resource fixed resource xlink role cdata fixed http www.example.com linkprops gpa xlink title cdata implied xlink label nmtoken implied element go empty attlist go xlink type arc fixed arc xlink arcrole cdata implied xlink title cdata implied xlink show new replace embed other none implied xlink actuate onload onrequest other none implied xlink from nmtoken implied xlink to nmtoken implied following is how xml elements using these declarations might look. courseload tooltip course load for pat jones tooltip person xlink href students patjones62.xml xlink label student62 xlink role http www.example.com linkprops student xlink title pat jones person xlink href profs jaysmith7.xml xlink label prof7 xlink role http www.example.com linkprops professor xlink title dr. jay smith more remote resources for professors teaching assistants etc. course xlink href courses cs101.xml xlink label cs-101 xlink title computer science 101 more remote resources for courses seminars etc. gpa xlink label patjonesgpa 3.5 gpa go xlink from student62 xlink to patjonesgpa xlink show new xlink actuate onrequest xlink title pat jones s gpa go xlink from cs-101 xlink arcrole http www.example.com linkprops auditor xlink to student62 xlink show replace xlink actuate onrequest xlink title pat jones auditing the course go xlink from student62 xlink arcrole http www.example.com linkprops advisor xlink to prof7 xlink show replace xlink actuate onrequest xlink title dr. jay smith advisor courseload 5.1.1 local resources for an extended link resource-type element an extended link indicates its participating local resources by means of special subelements that appear inside the extended link. an entire subelement together with all of its contents makes up a local resource. the xlink element for local resources is any element with an attribute in the xlink namespace called type with a value of resource the resource-type element may have any content whatever content is present has no xlink-specified relationship to the link. it is possible for a resource-type element to have no content in cases where it serves as a starting resource expected to be traversed on request interactive xlink applications will typically generate some content in order to give the user a way to initiate the traversal. if a resource-type element has anything other than an extended-type element for a parent the resource-type element is not conformant. the resource-type element may have the semantic attributes role and title see 5.5 semantic attributes role arcrole and title and the traversal attribute label see 5.7 traversal attributes label from and to the semantic attributes supply information about the resource in generic terms outside of the context of a particular arc that leads to it the role attribute indicates a property of the resource and the title attribute indicates a human-readable description of the resource. the label attribute provides a way for an arc-type element to refer to it in creating a traversal arc. example sample resource-type element declarations and instance following is a non-normative set of relax ng declarations in the compact syntax for a resource-type element. namespace a http relaxng.org ns compatibility annotations 1.0 namespace xlink http www.w3.org 1999 xlink gpa element gpa attlist.gpa any attlist.gpa a defaultvalue resource attribute xlink type resource a defaultvalue http www.example.com linkprops gpa attribute xlink role string http www.example.com linkprops gpa attribute xlink title text attribute xlink label xsd nmtoken any element attribute text any text following is how an xml element using these declarations might look. gpa xlink type resource xlink role http www.example.com linkprops gpa xlink label patjonesgpa 3.5 gpa 5.1.2 remote resources for an extended link locator-type element an extended link indicates remote resources that participate in it by means of locator elements. the xlink element for locators is any element with an attribute in the xlink namespace called type with a value of locator the locator-type element may have any content. other than title-type elements that are direct children see 5.1.4 titles for extended links locators and arcs title-type element whatever content is present has no xlink-specified relationship to the link. if a locator-type element contains nested xlink elements such contained elements have no xlink-specified relationship to the parent link. if a locator-type element has anything other than an extended-type element for a parent the locator-type element is not conformant. constraint attributes on locator element the locator-type element must have the locator attribute see 5.4 locator attribute href the locator attribute href must have a value supplied. the locator-type element may have the semantic attributes role and title see 5.5 semantic attributes role arcrole and title and the traversal attribute label see 5.7 traversal attributes label from and to the locator attribute provides an iri reference that identifies a remote resource. the semantic attributes supply information about the resource in generic terms outside of the context of a particular arc that leads to it the role attribute indicates a property that the resource has and the title attribute indicates a human-readable description of the resource. the label attribute provides a way for an arc-type element to refer to it in creating a traversal arc. note a locator-type element by itself does not constitute a link just because it has a locator href attribute unlike a simple-type element it does not create an xlink-governed association between itself and the referenced resource. example sample locator-type element declarations and instance following is a non-normative set of xml schema declarations for a locator-type element. xs schema xmlns xs http www.w3.org 2001 xmlschema xmlns xlink http www.w3.org 1999 xlink targetnamespace elementformdefault qualified xs import namespace http www.w3.org 1999 xlink xs element name person xs complextype xs complexcontent xs restriction base xs anytype xs attribute ref xlink type fixed locator xs attribute ref xlink href use required xs attribute ref xlink role xs attribute ref xlink title xs attribute ref xlink label xs restriction xs complexcontent xs complextype xs element xs element name course xs complextype xs complexcontent xs restriction base xs anytype xs attribute ref xlink type fixed locator xs attribute ref xlink href use required xs attribute ref xlink role fixed http www.example.com linkprops course xs attribute ref xlink title xs attribute ref xlink label xs restriction xs complexcontent xs complextype xs element xs schema following is how xml elements using these declarations might look. person xmlns xlink http www.w3.org 1999 xlink xlink href students patjones62.xml xlink label student62 xlink role http www.example.com linkprops student xlink title pat jones person xmlns xlink http www.w3.org 1999 xlink xlink href profs jaysmith7.xml xlink label prof7 xlink role http www.example.com linkprops professor xlink title dr. jay smith course xmlns xlink http www.w3.org 1999 xlink xlink href courses cs101.xml xlink label cs-101 xlink title computer science 101 5.1.3 traversal rules for an extended link arc-type element an extended link may indicate rules for traversing among its participating resources by means of a series of optional arc elements. the xlink element for arcs is any element with an attribute in the xlink namespace called type with a value of arc the arc-type element may have any content. other than title-type elements that are direct children see 5.1.4 titles for extended links locators and arcs title-type element whatever content is present has no xlink-specified relationship to the link. if an arc-type element has anything other than an extended-type element for its parent the arc-type element is not conformant. the arc-type element may have the traversal attributes from and to see 5.7 traversal attributes label from and to the behavior attributes show and actuate see 5.6 behavior attributes show and actuate and the semantic attributes arcrole and title see 5.5 semantic attributes role arcrole and title the traversal attributes define the desired traversal between pairs of resources that participate in the same link where the resources are identified by their label attribute values. the from attribute defines resources from which traversal may be initiated that is starting resources while the to attribute defines resources that may be traversed to that is ending resources. the behavior attributes specify the desired behavior for xlink applications to use when traversing to the ending resource. the semantic attributes describe the meaning of the arc s ending resource relative to its starting resource. the arcrole attribute corresponds to the rdf notion of a property where the role can be interpreted as stating that starting-resource has arc-role ending-resource. this contextual role can differ from the meaning of an ending resource when taken outside the context of this particular arc. for example a resource might generically represent a person but in the context of a particular arc it might have the role of mother and in the context of a different arc it might have the role of daughter. when the same resource serves as a starting resource in several arcs whether in a single link or across many links traversal-request behavior is unconstrained by this specification but one possibility for interactive applications is a pop-up menu that lists the relevant arc or link titles. the following diagram shows an extended link that associates five remote resources and provides rules for traversal among them. all of the arcs specified are third-party arcs that is the arcs go exclusively between remote resources. the nondirectional solid lines indicate as before that the link is associating the five resources the new dotted arrows indicate the traversal rules that the link provides. notice that some resources share the same label value. this diagram reflects directional traversal arcs created by the following settings where both as and cs are allowed to initiate traversal to all bs. because some labels appear on several resources each arc specification potentially creates several traversal arcs at once go xlink type arc xlink from a xlink to b go xlink type arc xlink from c xlink to b as another example assume an extended link that contains five locators two with label values of parent and three with label values of child extendedlink xlink type extended loc xlink type locator xlink href xlink label parent xlink title p1 loc xlink type locator xlink href xlink label parent xlink title p2 loc xlink type locator xlink href xlink label child xlink title c1 loc xlink type locator xlink href xlink label child xlink title c2 loc xlink type locator xlink href xlink label child xlink title c3 arc-type elements would go here extendedlink the following specifies traversal from parent resources to child resources which includes all of p1-c1 p1-c2 p1-c3 p2-c1 p2-c2 and p2-c3 go xlink type arc xlink from parent xlink to child if no value is supplied for a from or to attribute the missing value is interpreted as standing for all the labels supplied on locator-type elements in that extended-type element. for example the following specifies traversal from parents to children and also from children to children which includes all of p1-c1 p1-c2 p1-c3 p2-c1 p2-c2 p2-c3 c1-c1 c1-c2 c1-c3 c2-c1 c2-c2 c2-c3 c3-c1 c3-c2 and c3-c3 go xlink type arc xlink to child in this case note that the traversal rules include arcs from some resources to other resources with the same label from children to other children as well as from some resources to themselves from a child to itself this is not an error. if no arc-type elements are provided in an extended link then by extension the missing from and to values are interpreted as standing for all the labels in that link. this would be equivalent to the following traversal specification go xlink type arc when more than one locator has the same label the set of locators with the same label are to be understood as individual locators rather than as referring to an aggregate resource the traversal behavior of such a link might be the same as for a link where all the locators have different roles and the appropriate arcs are specified to produce the identical traversal pairs. if the arc traversal rules for an extended link leave out any possible traversal pairs xlink defines no traversal for these pairs. a higher-level application may perform non-xlink-directed traversals for example a link-checking process might traverse all available pairs of resources. constraint no arc duplication each arc-type element must have a pair of from and to values that does not repeat the from and to values respectively for any other arc-type element in the same extended link that is each pair in a link must be unique. example sample arc-type element declarations and instance following is a non-normative set of relax ng declarations for an arc-type element. grammar xmlns a http relaxng.org ns compatibility annotations 1.0 xmlns xlink http www.w3.org 1999 xlink xmlns http relaxng.org ns structure 1.0 datatypelibrary http www.w3.org 2001 xmlschema-datatypes define name go element name go ref name attlist.go empty element define define name attlist.go combine interleave optional attribute name xlink type a defaultvalue arc value arc value attribute optional optional attribute name xlink arcrole optional optional attribute name xlink title optional optional attribute name xlink show choice value new value value replace value value embed value value other value value none value choice attribute optional optional attribute name xlink actuate choice value onload value value onrequest value value other value value none value choice attribute optional optional attribute name xlink from data type ncname attribute optional optional attribute name xlink to data type ncname attribute optional define grammar following is how xml elements using these declarations might look. go xmlns xlink http www.w3.org 1999 xlink xlink type arc xlink from student62 xlink to patjonesgpa xlink show new xlink actuate onrequest xlink title pat jones s gpa go xmlns xlink http www.w3.org 1999 xlink xlink type arc xlink from cs-101 xlink arcrole http www.example.com linkprops auditor xlink to student62 xlink show replace xlink actuate onrequest xlink title pat jones auditing the course go xmlns xlink http www.w3.org 1999 xlink xlink type arc xlink from student62 xlink arcrole http www.example.com linkprops advisor xlink to prof7 xlink show replace xlink actuate onrequest xlink title dr. jay smith advisor 5.1.4 titles for extended links locators and arcs title-type element the extended- locator- and arc-type elements may have the title attribute more about which see 5.5 semantic attributes role arcrole and title however they may also have a series of one or more title-type elements. such elements are useful for example for cases where human-readable label information needs further element markup or where multiple titles are necessary. one common motivation for using the title-type element is to account for internationalization and localization. for example title markup might be necessary for bidirectional contexts or in east asian languages and multiple titles might be necessary for different natural-language versions of a title. see ruby annotation for examples where markup might be necessary inside a title. the xlink element for titles is any element with an attribute in the xlink namespace called type with a value of title the title-type element may have any content. if a title-type element contains nested xlink elements such contained elements have no xlink-specified relationship to the parent link containing the title. if a title-type element has anything other than an extended- locator- or arc-type element for a parent the title-type element is not conformant. example sample title-type element declarations and instance following is a non-normative set of xml schema declarations for a title-type element. the element has been given the xml lang attribute which may be used in conjunction with server settings or other contextual information in determining which title to present. xs schema xmlns xs http www.w3.org 2001 xmlschema xmlns xlink http www.w3.org 1999 xlink targetnamespace elementformdefault qualified xs import namespace http www.w3.org 1999 xlink xs import namespace http www.w3.org xml 1998 namespace xs element name advisorname xs complextype xs sequence xs element ref name xs sequence xs attribute ref xlink type fixed title xs attribute ref xml lang xs complextype xs element xs element name name xs complextype xs sequence xs element ref honorific minoccurs 0 maxoccurs 1 xs element ref given xs element ref family xs sequence xs complextype xs element advisor is a locator type element xs element name advisor xs complextype xs sequence xs element ref advisorname xs sequence xs attribute ref xlink type fixed locator xs attribute ref xlink href use required xs attribute ref xlink role xs attribute ref xlink title xs attribute ref xlink label xs complextype xs element arbitrary declarations for the components of the name xs element name honorific type xs string xs element name given type xs string xs element name family type xs string xs schema following is how xml elements using these declarations might look. advisor xlink href profs jaysmith7.xml advisorname xml lang en name honorific dr. honorific given jay given family smith family name advisorname advisor 5.1.5 locating linkbases special arc role for an xlink application to traverse from a starting resource to an ending resource it needs to locate both the starting resource and the link. locating the two pieces is not a problem in the case of outbound arcs because the starting resource is either the linking element itself or a child of the linking element. however in the case of inbound and third-party arcs the xlink application needs to be able to find both pieces somehow. in the course load example extended links can associate pairs of remote resources representing students and courses. in order for the system to load and present a student resource such as a description and picture of the person in a way that offers traversal to related information for example by allowing users to click on the student s name to traverse to information about the courses in which she is enrolled it needs to locate and use the extended links that contain the association. linkbases are often used to make link management easier by gathering together a number of related linking elements. xlink provides a way to instruct xlink applications to access potentially relevant linkbases. the instruction takes the form of an arc specification whether an explicit one in an extended link or an implicit one in a simple link that has the following value for its arcrole attribute http www.w3.org 1999 xlink properties linkbase constraint linkbases must be xml any linkbase specified as the ending resource of an arc with this special value must be an xml document. xlink applications may also use any other means to locate and process additional linkbases. the handling of a linkbase arc is much like the handling of a normal arc except that traversal entails loading the ending resource the linkbase to extract its links for later use rather than to present it to a user or to perform some other processing. its handling is also special in that xlink applications must suspend traversal of linkbase arcs at user option. specifically on loading a linkbase arc an xlink application should keep track of what the starting resource is. whenever a document containing that starting resource is loaded and traversal of the linkbase arc is actuated the application should access the linkbase and extract any extended links found inside it. in the case that the extracted resource is a portion of a complete xml document such as a range or a string range only those extended links completely contained in the extracted portion should be made available. the timing of linkbase arc traversal depends on the value of the actuate attribute on the arc. for example if the value is onload the linkbase is loaded and its links extracted as soon as the starting resource is loaded. any show attribute value on a linkbase arc must be ignored because traversal does not entail presentation in this case. linkbases may be chained by virtue of serving as the starting resource of yet another linkbase arc. the application interpreting an initial linkbase arc may choose to limit the number of steps processed in the chain. an application should maintain a list of extended links retrieved as a result of processing a linkbase and should not retrieve duplicate resources or links in the case where a cyclic dependency exists. to ease xlink processing document creators may wish to define linkbase arcs near the beginning of a document. example annotating a specification following is a non-normative set of declarations for an extended link that specializes in providing linkbase arcs element basesloaded startrsrc linkbase load attlist basesloaded xlink type extended fixed extended element startrsrc empty attlist startrsrc xlink type locator fixed locator xlink href cdata required xlink label nmtoken implied element linkbase empty attlist linkbase xlink type locator fixed locator xlink href cdata required xlink label nmtoken implied element load empty attlist load xlink type arc fixed arc xlink arcrole cdata fixed http www.w3.org 1999 xlink properties linkbase xlink actuate onload onrequest other none implied xlink from nmtoken implied xlink to nmtoken implied following is how an xml element using these declarations might look. this would indicate that when a specification document is loaded a linkbase full of annotations to it should automatically be loaded as well possibly necessitating re-rendering of the entire specification document to reveal any regions within it that serve as starting resources in the links found in the linkbase. basesloaded startrsrc xlink label spec xlink href spec.xml linkbase xlink label linkbase xlink href linkbase.xml load xlink from spec xlink to linkbase actuate onload basesloaded following is how an xml element using these declarations might look if the linkbase loading were on request. this time the starting resource consists of the words click here to reveal annotations. if the starting resource were the entire document as in the example above a reasonable behavior for allowing a user to actuate traversal would be a confirmation dialog box. basesloaded startrsrc xlink label spec xlink href spec.xml#string-range click here to reveal annotations. linkbase xlink label linkbase xlink href linkbase.xml load xlink from spec xlink to linkbase actuate onrequest basesloaded 5.2 simple links simple-type element definition a simple link is a link that associates exactly two resources one local and one remote with an arc going from the former to the latter. thus a simple link is always an outbound link. the purpose of a simple link is to be a convenient shorthand for the equivalent extended link. a single simple linking element combines the basic functions of an extended-type element a locator-type element an arc-type element and a resource-type element. the following diagram shows the characteristics of a simple link it associates one local and one remote resource and implicitly provides a single traversal arc from the local resource to the remote one. this could represent for example the name of a student appearing in text which when clicked leads to information about the student. example simple link functionality done with an extended link a simple link could be represented by an extended link in approximately the following way studentlink xlink type extended resource xlink type resource xlink label local pat jones resource locator xlink type locator xlink href xlink label remote xlink role xlink title go xlink type arc xlink from local xlink to remote xlink arcrole xlink show xlink actuate studentlink a simple link combines all the features above except for the types and labels into a single element. in cases where only this subset of features is required the xlink simple linking element is available as an alternative to the extended linking element. the features missing from simple links are as follows supplying arbitrary numbers of local and remote resources specifying an arc from its remote resource to its local resource associating a title with the single hardwired arc associating a role or title with the local resource associating a role or title with the link as a whole the xlink element for simple links is any element with an attribute in the xlink namespace called type with a value of simple or with an attribute in the xlink namespace called href and no attribute in the xlink namespace called type. in this case the value simple is implied for the type attribute. in other words the xlink type attribute is optional on xlink simple links. the simple equivalent of the above extended link would be as follows studentlink xlink href pat jones studentlink the simple-type element may have any content. the simple-type element itself together with all of its content is the local resource of the link as if the element were a resource-type element. if a simple-type element contains nested xlink elements such contained elements have no xlink-specified relationship to the parent link. it is possible for a simple-type element to have no content in cases where the link is expected to be traversed on request interactive xlink applications will typically generate some content in order to give the user a way to initiate the traversal. the simple-type element effectively takes the locator attribute href and the semantic attributes role and title from the locator-type element and the behavior attributes show and actuate and the single semantic attribute arcrole from the arc-type element. it is not an error for a simple-type element to have no locator href attribute value. if a value is not provided the link is simply untraversable. such a link may still be useful for example to associate properties with the resource by means of xlink attributes. example sample simple-type element declarations and instance following is a non-normative set of relax ng declarations in the compact syntax for a simple-type element. namespace a http relaxng.org ns compatibility annotations 1.0 namespace xlink http www.w3.org 1999 xlink studentlink element studentlink attlist.studentlink any attlist.studentlink attribute xlink type simple attribute xlink href text a defaultvalue http www.example.com linkprops student attribute xlink role string http www.example.com linkprops student attribute xlink arcrole text attribute xlink title text attribute xlink show new replace embed other none attribute xlink actuate onload onrequest other none any element attribute text any text following is how an xml document might use these declarations. and studentlink xlink href students patjones62.xml pat jones studentlink is popular around the student union. 5.3 xlink element type attribute type the attribute that identifies xlink element types is type. constraint type value the value of the type attribute must be supplied unless the element is a simple link and an href attribute in the xlink namespace is supplied. in the latter case the value simple is implied for the type attribute. if a value is supplied for the type attribute its value must be one of simple extended locator arc resource title or none when the value of the type attribute is none the element has no xlink-specified meaning and any xlink-related content or attributes have no xlink-specified relationship to the element. example sample type attribute declarations following is a non-normative attribute-list declaration for type on an element intended to be simple-type. attlist simple-link-element xlink type simple fixed simple an analogous declaration in xml schema is xs element name simple-link-element xs attribute ref xlink type fixed simple xs element in relax ng element simple-link-element a defaultvalue simple attribute xlink type simple for an element that serves as an xlink element only on some occasions one declaration might be as follows where the document creator sets the value to simple in some circumstances and none in others. the use of none might be useful in helping xlink applications to avoid checking for the presence of an href value. attlist commandname xlink type simple none implied xlink href cdata implied analogously relax ng element commandname attribute xlink type simple none the global nature of xlink type makes redefinition on a per-element basis impractical in xml schema. 5.4 locator attribute href the attribute that supplies the data that allows an xlink application to find a remote resource or resource fragment is href. it may be used on simple-type elements and must be used on locator-type elements. the value of the href attribute is a legacy extended iris leiri processing a relative identifier against a base is handled straightforwardly the algorithms of rfc 3986 can be applied directly treating the characters additionally allowed in leiris in the same way that unreserved characters are in uri references. note xlink 1.0 explicitly did not require applications to check that the value of the xlink href attribute conformed to the syntactic rules of a uri. while rfc 3986 has clarified the syntactic rules this specification follows the lead of xlink 1.0 and many other specifications and does not impose any new conformance testing requirements on xlink applications in this area. although xlink applications need not enforce uri syntactic constraints xlink applications which use libraries which do detect violations of the syntactic rules of rfc 3986 should not recover silently. if the value of the href attribute is a relative reference as defined in rfc 3986 also known as relative uri in earlier rfcs or results in a relative reference after escaping its absolute version must be computed by the method of xml base before use. if a locator includes a fragment identifer the syntax of the fragment identifier is defined by the media type of the representation returned when the locator is dereferenced. for locators into xml resources that is resources with the media type application xml or media types that defer to the fragment identifier syntax of application xml media the syntax of the fragment identifier is expected to be defined by the successor to rfc 3023 technically there is no fragment identifier syntax for xml resources at the time of this writing though the xpointer framework and xpointer element scheme are explicitly supported by several xml vocabularies. example sample href attribute declarations following is a non-normative attribute-list declaration for href on an element intended to be simple-type. attlist simplelink xlink href cdata required 5.5 semantic attributes role arcrole and title the attributes that describe the meaning of resources within the context of a link are role arcrole and title. the role attribute may be used on extended- simple- locator- and resource-type elements. the arcrole attribute may be used on arc- and simple-type elements. the title attribute may be used on all of these types of elements. the value of the role or arcrole attribute is a legacy extended iris the identifier must not be relative. the title attribute is used to describe the meaning of a link or resource in a human-readable fashion along the same lines as the role or arcrole attribute. however see also 5.1.4 titles for extended links locators and arcs title-type element a value is optional if a value is supplied it should contain a string that describes the resource. the use of this information is highly dependent on the type of processing being done. it may be used for example to make titles available to applications used by visually impaired users or to create a table of links or to present help text that appears when a user lets a mouse pointer hover over a starting resource. example sample role and title attribute declarations following is a non-normative attribute-list declaration for role and title on an element intended to be simple-type. attlist simplelink xlink role cdata implied xlink title cdata implied following is a non-normative attribute-list declaration for arcrole and title on an element intended to be arc-type. attlist go xlink arcrole cdata implied xlink title cdata implied 5.6 behavior attributes show and actuate the behavior attributes are show and actuate. they may be used on the simple- and arc-type elements. when used on a simple-type element they signal behavior intentions for traversal to that link s single remote ending resource. when they are used on an arc-type element they signal behavior intentions for traversal to whatever ending resources local or remote are specified by that arc. the show and actuate attributes are not required. example sample show and actuate attribute declarations following is a non-normative attribute-list declaration for show and actuate on an element intended to be simple-type. attlist simplelink xlink type simple fixed simple xlink show new replace embed other none implied xlink actuate onload onrequest other none implied applications encountering arc-type elements in linkbase lists must treat the behavior attributes as if they were specified as show none and actuate onload even if other values were specified. 5.6.1 show attribute the show attribute is used to communicate the desired presentation of the ending resource on traversal from the starting resource. constraint show value if a value is supplied for a show attribute it must be one of the values new replace embed other and none conforming xlink applications should apply the following treatment for show values new an application traversing to the ending resource should load it in a new window frame pane or other relevant presentation context. this is similar to the effect achieved by the following html fragment a href http www.example.org target blank a replace an application traversing to the ending resource should load the resource in the same window frame pane or other relevant presentation context in which the starting resource was loaded. this is similar to the effect achieved by the following html fragment a href http www.example.org target self a embed an application traversing to the ending resource should load its presentation in place of the presentation of the starting resource. this is similar to the effect achieved by the following html fragment img src http www.example.org smiley.gif alt the presentation of the starting resource typically does not consist of an entire document it would be the entire document only when the root element of the document is a simple link. thus embedding typically has an effect distinct from replacing. just as for the html img element embedding affects only the presentation of the relevant resources it does not dictate permanent transformation of the starting resource. put another way when an embedded xlink is processed the result of styling the ending resource of the link is merged into the result of styling the resource into which it is embedded. by contrast when a construct such as an xinclude element is resolved the transformation takes place in the original source document. the behavior of conforming xlink applications when embedding xml-based rfc 3023 ending resources is not defined in this version of this specification. the presentation of embedded resources is application dependent. other the behavior of an application traversing to the ending resource is unconstrained by this specification. the application should look for other markup present in the link to determine the appropriate behavior. none the behavior of an application traversing to the ending resource is unconstrained by this specification. no other markup is present to help the application determine the appropriate behavior. if the starting or ending resource consists of multiple non-contiguous locations such as a series of string ranges in various locations in the resource then application behavior is unconstrained. see xptr for more information about selecting portions of xml documents. note some possibilities for application behavior with non-contiguous ending resources might include highlighting of each location producing a dialog box that allows the reader to choose among the locations as if there were separate arcs leading to each one concatenating the content of all the locations for presentation and so on. application behavior with non-contiguous starting resources might include concatenation and rendering as a single unit or creating one arc emanating from each contiguous portion. 5.6.2 actuate attribute the actuate attribute is used to communicate the desired timing of traversal from the starting resource to the ending resource.. constraint actuate value if a value is supplied for an actuate attribute it must be be one of the values onload onrequest other and none conforming xlink applications should apply the following treatment for actuate values onload an application should traverse to the ending resource immediately on loading the starting resource. this is similar to the effect typically achieved by the following html fragment when the user agent is configured to display images img src http www.example.org smiley.gif alt if a single resource contains multiple arcs whose behavior is set to show replace actuate onload application behavior is unconstrained by xlink. onrequest an application should traverse from the starting resource to the ending resource only on a post-loading event triggered for the purpose of traversal. an example of such an event might be when a user clicks on the presentation of the starting resource or a software module finishes a countdown that precedes a redirect. other the behavior of an application traversing to the ending resource is unconstrained by this specification. the application should look for other markup present in the link to determine the appropriate behavior. none the behavior of an application traversing to the ending resource is unconstrained by this specification. no other markup is present to help the application determine the appropriate behavior. 5.7 traversal attributes label from and to the traversal attributes are label from and to. the label attribute may be used on the resource- and locator-type elements. the from and to attributes may be used on the arc-type element. constraint label from and to values the value of a label from or to attribute must be an ncname. if a value is supplied for a from or to attribute it must correspond to the same value for some label attribute on a locator- or resource-type element that appears as a direct child inside the same extended-type element as does the arc-type element. a references a.1 normative references rfc 3023 rfc 3023 xml media types. makoto m. st. laurent s. and d. kohn editors. internet engineering task force 2001. see http www.ietf.org rfc rfc3023.txt. rfc 3986 rfc 3986 uniform resource identifier uri generic syntax. berners-lee t. fielding r. and masinter l editors. internet engineering task force 2005. see http www.ietf.org rfc rfc3986.txt. rfc 3987 rfc 3987 internationalized resource identifiers iris internet engineering task force 2005. see http www.ietf.org rfc rfc3987.txt. legacy extended iris legacy extended iris for xml resource identification. henry s. thompson richard tobin and norman walsh editors. world wide web consortium 2008. see http www.w3.org tr leiri. xml extensible markup language xml 1.0 fifth edition tim bray jean paoli c.m. sperberg-mcqueen et. al. editors. world wide web consortium 2008. see http www.w3.org tr rec-xml rfc 2119 key words for use in rfcs to indicate requirement levels. s. bradner editor. internet engineering task force 1997. see http www.ietf.org rfc rfc2119.txt. xml base xml base second edition jonathan marsh and richard tobin editors. world wide web consortium 2009. see http www.w3.org tr xmlbase xml names namespaces in xml 1.0 third edition tim bray dave hollander andrew layman et. al. editors. world wide web consortium 2009. see http www.w3.org tr rec-xml-names xpointer framework xpointer framework grosso paul eve maler jonathan marsh and norman walsh editors. world wide web consortium 2003. see http www.w3.org tr xptr-framework xpointer element scheme xpointer element scheme grosso paul eve maler jonathan marsh and norman walsh editors. world wide web consortium 2003. see http www.w3.org tr xptr-element charmod fundamentals character model for the world wide web 1.0 fundamentals d rst martin j. fran ois yergeau richard ishida et. al. editors. world wide web consortium 2005. see http www.w3.org tr charmod a.2 non-normative references extending xlink 1.0 extending xlink 1.0 norman walsh editor. world wide web consortium 27 jan 2005. see http www.w3.org tr xlink10-ext. xml linking language xlink version 1.0 xml linking language xlink version 1.0 steven derose david orchard and eve maler editors. world wide web consortium 27 jun 2001. see http www.w3.org tr xlink dexter the dexter hypertext reference model. halasz frank. 1994. in communications of the association for computing machinery 37 2 february 1994 30-39. fress steven j. derose and andries van dam. 1999. document structure in the fress hypertext system. markup languages 1 1 winter. cambridge mit press 7-32. html html 4.01 specification. world wide web consortium 1999. see http www.w3.org tr 1999 rec-html401-19991224 intermedia intermedia the concept and the construction of a seamless information environment. yankelovich nicole bernard j. haan norman k. meyrowitz and steven m. drucker. 1988. ieee computer 21 january 1988 81-96. iso iec 10744 iso iec 10744-1992 e information technology-hypermedia time-based structuring language hytime geneva international organization for standardization 1992. extended facilities annex. iso international organization for standardization geneva international organization for standardization 1996. see http www.y12.doe.gov sgml wg8 document 1920.htm. microcosm rethinking hypermedia the microcosm approach. hall wendy hugh davis and gerard hutchings. 1996. boston kluwer academic publishers. isbn 0-7923-9679-0. ohs the role of xml in open hypermedia systems. van ossenbruggen jacco anton eli ns and lloyd rutledge. position paper for the 4th workshop on open hypermedia systems acm hypertext 98. rdf rdf primer. manola frank and eric miller editors. world wide web consortium 2004. see http www.w3.org tr rdf-primer tei guidelines for electronic text encoding and interchange. c. m. sperberg-mcqueen and lou burnard editors. association for computers and the humanities ach association for computational linguistics acl and association for literary and linguistic computing allc chicago oxford text encoding initiative 1994. xis xml information set. john cowan and richard tobin editors. world wide web consortium 2004. see http www.w3.org tr xml-infoset xinclude xml inclusions xinclude version 1.0 second edition jonathan marsh david orchard and daniel veillard editors. world wide web consortium 2006. see http www.w3.org tr xinclude xlreq xml xlink requirements version 1.0. steven derose editor. world wide web consortium 1999. see http www.w3.org tr 1999 note-xlink-req-19990224 xptr xml pointer language xpointer ron daniel steve derose eve maler et. al. editors. world wide web consortium 2002. see http www.w3.org tr xptr xml schema part 1 structures xml schema part 1 structures. david beech noah mendelsohn murray maloney and henry s. thompson editors. world wide web consortium 2004. relax ng iso iec 19757-2 2008 information technology document schema definition language dsdl part 2 regular-grammar-based validation relax ng. international organization for standardization 2008. css cascading style sheets level 2 revision 1 css 2.1 specification. bert bos tantek elik ian hickson et. al. editors. world wide web consortium 2009. see http www.w3.org tr css2. ruby annotation ruby annotation. michel suignard tex texin marcin sawicki et. al. editors. world wide web consortium 2001. see http www.w3.org tr ruby b sample dtd non-normative the following dtd makes invalid for purposes of argument all xlink constructs for which this specification does not specify behavior. it is provided only as a convenience for application developers it has no normative status. the following assumptions hold for this dtd only constructs that have xlink-defined meaning are allowed. no foreign vocabularies are mixed in since dtds do not work well with namespaces. the use of any means there is typically content provided in the element that is used by xlink in some way. the use of the title construct means that any non-title content provided has no xlink-defined use. elements are named after the xlink element types they represent. other assumptions and conditions appear as comments in the dtd. entity showactuate xlink show new replace embed other none implied xlink actuate onload onrequest other none implied entity simpleattrs xlink type simple simple xlink href cdata implied xlink role cdata implied xlink arcrole cdata implied xlink title cdata implied showactuate element simple any attlist simple xmlns xlink cdata fixed http www.w3.org 1999 xlink simpleattrs entity extendedcontent.extras entity extendedmodel title resource locator arc extendedcontent.extras entity extendedattrs xlink type extended fixed extended xlink role cdata implied xlink title cdata implied element extended extendedmodel attlist extended xmlns xlink cdata fixed http www.w3.org 1999 xlink extendedattrs entity titleattrs xlink type title fixed title xml lang cdata implied element title any xml lang is not required but provides much of the motivation for title elements in addition to attributes and so is provided here for convenience attlist title titleattrs entity resourceattrs xlink type resource fixed resource xlink role cdata implied xlink title cdata implied xlink label nmtoken implied element resource any attlist resource resourceattrs entity locatorattrs xlink type locator fixed locator xlink href cdata required xlink role cdata implied xlink title cdata implied xlink label nmtoken implied element locator title label is not required but locators have no particular xlink function if they are not labeled attlist locator locatorattrs entity arcattrs xlink type arc fixed arc xlink arcrole cdata implied xlink title cdata implied xlink from nmtoken implied xlink to nmtoken implied showactuate element arc title from and to have default behavior when values are missing attlist arc arcattrs c sample xml schema non-normative the following xml schema document per xml schema part 1 structures provides xlink-1.1-specific declarations and definitions for use in defining linking elements which conform to this specification. a permanent copy of this schema document is available at http www.w3.org xml 2008 06 xlink.xsd. another copy is available at http www.w3.org 1999 xlink.xsd. at the time of publication these two copies are identical but the version at 1999 xlink.xsd may change in the future to reflect subsequent editions or versions of xlink or of xml schema. xml version 1.0 encoding utf-8 xs schema xmlns xs http www.w3.org 2001 xmlschema targetnamespace http www.w3.org 1999 xlink xmlns xlink http www.w3.org 1999 xlink xs annotation xs documentation this schema document provides attribute declarations and attribute group complex type and simple type definitions which can be used in the construction of user schemas to define the structure of particular linking constructs e.g. cdata xs schema xmlns xs http www.w3.org 2001 xmlschema xmlns xl http www.w3.org 1999 xlink xs import namespace http www.w3.org 1999 xlink location http www.w3.org 1999 xlink.xsd xs element name mysimple xs complextype xs attributegroup ref xl simpleattrs xs complextype xs element xs schema xs documentation xs annotation xs import namespace http www.w3.org xml 1998 namespace schemalocation http www.w3.org 2001 xml.xsd xs attribute name type type xlink typetype xs simpletype name typetype xs restriction base xs token xs enumeration value simple xs enumeration value extended xs enumeration value title xs enumeration value resource xs enumeration value locator xs enumeration value arc xs restriction xs simpletype xs attribute name href type xlink hreftype xs simpletype name hreftype xs restriction base xs anyuri xs simpletype xs attribute name role type xlink roletype xs simpletype name roletype xs restriction base xs anyuri xs minlength value 1 xs restriction xs simpletype xs attribute name arcrole type xlink arcroletype xs simpletype name arcroletype xs restriction base xs anyuri xs minlength value 1 xs restriction xs simpletype xs attribute name title type xlink titleattrtype xs simpletype name titleattrtype xs restriction base xs string xs simpletype xs attribute name show type xlink showtype xs simpletype name showtype xs restriction base xs token xs enumeration value new xs enumeration value replace xs enumeration value embed xs enumeration value other xs enumeration value none xs restriction xs simpletype xs attribute name actuate type xlink actuatetype xs simpletype name actuatetype xs restriction base xs token xs enumeration value onload xs enumeration value onrequest xs enumeration value other xs enumeration value none xs restriction xs simpletype xs attribute name label type xlink labeltype xs simpletype name labeltype xs restriction base xs ncname xs simpletype xs attribute name from type xlink fromtype xs simpletype name fromtype xs restriction base xs ncname xs simpletype xs attribute name to type xlink totype xs simpletype name totype xs restriction base xs ncname xs simpletype xs attributegroup name simpleattrs xs attribute ref xlink type fixed simple xs attribute ref xlink href xs attribute ref xlink role xs attribute ref xlink arcrole xs attribute ref xlink title xs attribute ref xlink show xs attribute ref xlink actuate xs attributegroup xs group name simplemodel xs sequence xs any processcontents lax minoccurs 0 maxoccurs unbounded xs sequence xs group xs complextype mixed true name simple xs annotation xs documentation intended for use as the type of user-declared elements to make them simple links. xs documentation xs annotation xs group ref xlink simplemodel xs attributegroup ref xlink simpleattrs xs complextype xs attributegroup name extendedattrs xs attribute ref xlink type fixed extended use required xs attribute ref xlink role xs attribute ref xlink title xs attributegroup xs group name extendedmodel xs choice xs element ref xlink title xs element ref xlink resource xs element ref xlink locator xs element ref xlink arc xs choice xs group xs complextype name extended xs annotation xs documentation intended for use as the type of user-declared elements to make them extended links. note that the elements referenced in the content model are all abstract. the intention is that by simply declaring elements with these as their substitutiongroup all the right things will happen. xs documentation xs annotation xs group ref xlink extendedmodel minoccurs 0 maxoccurs unbounded xs attributegroup ref xlink extendedattrs xs complextype xs element name title type xlink titleelttype abstract true xs attributegroup name titleattrs xs attribute ref xlink type fixed title use required xs attribute ref xml lang xs annotation xs documentation xml lang is not required but provides much of the motivation for title elements in addition to attributes and so is provided here for convenience. xs documentation xs annotation xs attribute xs attributegroup xs group name titlemodel xs sequence xs any processcontents lax minoccurs 0 maxoccurs unbounded xs sequence xs group xs complextype mixed true name titleelttype xs group ref xlink titlemodel xs attributegroup ref xlink titleattrs xs complextype xs element name resource type xlink resourcetype abstract true xs attributegroup name resourceattrs xs attribute ref xlink type fixed resource use required xs attribute ref xlink role xs attribute ref xlink title xs attribute ref xlink label xs attributegroup xs group name resourcemodel xs sequence xs any processcontents lax minoccurs 0 maxoccurs unbounded xs sequence xs group xs complextype mixed true name resourcetype xs group ref xlink resourcemodel xs attributegroup ref xlink resourceattrs xs complextype xs element name locator type xlink locatortype abstract true xs attributegroup name locatorattrs xs attribute ref xlink type fixed locator use required xs attribute ref xlink href use required xs attribute ref xlink role xs attribute ref xlink title xs attribute ref xlink label xs annotation xs documentation label is not required but locators have no particular xlink function if they are not labeled. xs documentation xs annotation xs attribute xs attributegroup xs group name locatormodel xs sequence xs element ref xlink title minoccurs 0 maxoccurs unbounded xs sequence xs group xs complextype name locatortype xs group ref xlink locatormodel xs attributegroup ref xlink locatorattrs xs complextype xs element name arc type xlink arctype abstract true xs attributegroup name arcattrs xs attribute ref xlink type fixed arc use required xs attribute ref xlink arcrole xs attribute ref xlink title xs attribute ref xlink show xs attribute ref xlink actuate xs attribute ref xlink from xs attribute ref xlink to xs annotation xs documentation from and to have default behavior when values are missing xs documentation xs annotation xs attribute xs attributegroup xs group name arcmodel xs sequence xs element ref xlink title minoccurs 0 maxoccurs unbounded xs sequence xs group xs complextype name arctype xs group ref xlink arcmodel xs attributegroup ref xlink arcattrs xs complextype xs schema note the working group acknowledges the work of the xbrl consortium in producing a w3c xml schema for xlink 1.0 which was useful input into the design of the schema document for xlink 1.1. d sample relax ng grammar non-normative the following relax ng grammars expressed in the compact syntax validate xlink 1.1. they are provided only as a convenience for application developers they have no normative status. xlink11-simple.rnc namespace xlink http www.w3.org 1999 xlink start anyelement anyelement simple foreignelement foreignelement element xlink foreign.att anyelement text simple.type attribute xlink type simple href.att attribute xlink href xsd anyuri role.att attribute xlink role xsd anyuri arcrole.att attribute xlink arcrole xsd anyuri title.att attribute xlink title text show.att attribute xlink show new replace embed other none actuate.att attribute xlink actuate onload onrequest other none foreign.att attribute xlink text simple element simple.type href.att simple.type href.att foreign.att role.att arcrole.att title.att show.att actuate.att anyelement text xlink11.rnc namespace xlink http www.w3.org 1999 xlink include xlink11-simple.rnc anyelement simple extended foreignelement label.att attribute xlink label xsd ncname from.att attribute xlink from xsd ncname to.att attribute xlink to xsd ncname extended element attribute xlink type extended foreign.att role.att title.att title resource locator arc anyelement text title element attribute xlink type title foreign.att anyelement text resource element attribute xlink type resource foreign.att role.att title.att label.att anyelement text locator element attribute xlink type locator foreign.att href.att role.att title.att label.att title anyelement text arc element attribute xlink type arc foreign.att arcrole.att title.att from.att to.att show.att actuate.att title anyelement text e changes from xlink 1.0 non-normative this specification implements the changes described in extending xlink 1.0 these changes make xlink more useful in the places where it is already being used and make it practical in a variety of similar vocabularies. it differs from xml linking language xlink version 1.0 in the following ways the xlink type attribute is no longer required for simple links. in the absence of any xlink type attribute an xlink is treated as a simple link. where xml linking language xlink version 1.0 referred to uris this specification refers to iris. this allows a broader range of values for for those properties that are identified with a resource identifier. this specification includes non-normative sample xml schema and relax ng grammars to complement the existing non-normative sample dtd. in addition a few editorial changes have also been made. some bibliographic references have been updated to point to more recent specifications. the conformance language has been rewritten to support a new simple conformance level for applications that only expect to process simple links. several of the examples have been changed to highlight the presence of non-normative grammars other than the dtd. the text describing the interpretation of the locator attribute xlink href has been moved into a separate specification legacy extended iris so that it may more easily be reused. the locator attribute is now described with reference to that specification. 