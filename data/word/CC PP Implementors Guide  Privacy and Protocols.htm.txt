cc pp implementors guide privacy and protocols cc pp implementors guide privacy and protocols w3c working draft 20 december 2001 this version http www.w3.org tr 2001 wd-ccpp-trust-20011220 latest version http www.w3.org tr ccpp-trust previous version none editors hidetaka ohto ohto@w3.org w3c panasonic lalitha suryanarayana mailto lalitha@tri.sbc.com sbc johan hjelm johan.hjelm@nrj.ericsson.se ericsson research japan copyright 2001 w3c mit inria keio all rights reserved. w3c liability trademark document use and software licensing rules apply. abstract this document gives implementors advice on how to protect the privacy of a cc pp user and outlines how this can be applied using p3p in http with the cc pp exchange protocol. status of this document this section describes the status of this document at the time of its publication. other documents may supersede this document. the latest status of this document series is maintained at the w3c. this document is a very preliminary public working draft made available by the world wide web consortium w3c for discussion only. it is intended to become a w3c note. this indicates no endorsement of its content. this is work in progress may be updated replaced or obsoleted by other documents at any time. a list of current w3c working drafts can be found at http www.w3.org tr this document is produced by the cc pp working group member only part of the device independence activity the working group welcomes feedback and discussion preferably on the public mailing list www-mobile@w3.org although comments may also be sent to the authors. public comments and their responses can be accessed at http lists.w3.org archives public www-mobile table of contents not included in this version. 1. introduction cc pp data is not in itself personal i.e. tied to a named user but since there are a number of ways for the user to be identified as the holder of the profile e.g. by identity transmision in http parameters or through recognition of the ip-number or such there is a need for a suggested privacy method for implementors. descriptions of single features in a description of a terminal or the users preferences for how that terminal should be used cannot in themselves be used to infringe on a users privacy. however when a profile contains a collection of such properties it can be used to personalize information the closer the personalization the bigger risk that the user can be identified from his specific use of the terminal and the bigger the risk of misuse from a privacy standpoint. there is also a possible risk that a user can be identified as having certain abilities e.g. if he constantly requests text in double-sized fonts it is likely that he is hard of seeing and this may be possible to misuse. generally speaking a user may not want to share some or all of the data in a cc pp profile and may wish to have control over who receives that information and when. origin servers customizing the content should therefore express to the user or user agent regarding their privacy practices with regard to the use of cc pp data so that the user can make a decision on whether or not to share that data with the server. p3p is a way for an origin server to express the privacy policy it adheres to for the user and or his terminal. while the match between p3p and cc pp is not perfect and while the intent and implementation of the two are different they can be used together to enhance the privacy protection of the user. cc pp is an abbreviation of composite capability preference profiles and is an extensible format based on rdf rdf rdf-schema for describing device capabilities and user preferences. in general user preferences and device capabilities need to be protected from malicious use but there is no trust management framework for cc pp so far. without trust management sensitive information opens to attacks by malicious servers or content providers. we do not aim to create new technologies in terms of network security authentication message validation personal privacy protection and cryptography. we intend to employ the existing technologies in terms of trust management while considering how to apply such technologies well fit into the use cases of cc pp. 2. scope of this document this document is a discussion document containing implementation advice for developers of services based on cc pp. it demonstrates the interactions between cc pp and p3p given the current state of implementations. however since cc pp only specifies a data structure and not a protocol this work should be taken as future input to a formal specification and currently be seen as advice to implementors only. 3. protocol and transport issues. there is currently no cc pp protocol. there are a number of proposals but for various reasons the group is not chartered to develop a protocol. it will do so as soon as possible but it does require a rechartering. meanwhile there are two proposals the cc pp exchange protocol and the w-http protocol. note that it would be possible to use the profile header mark baker suggests in draft-baker-xhtml-media-reg-01.txt and draft-baker-xhtml-media-reg-02.txt to reference a cc pp profile the mechanism has been demonstrated by kiniko yasuda of keio university there are two main ways of transporting cc pp over http using the cc pp exchange protocol or using the uaprof w-http protocol. 3.1 cc pp exchange protocol the cc pp exchange protocol ccpp-ex was presented as a w3c note on june 24 1999. it uses the http extension framework rfc2396 the intent was to provide a framework that was both possible to map into http headers and that can handle defaults as uris. the idea was to minimize data transfer over the air a goal that was accomplished as has been demonstrated by kiniko yasuda of keio university. ccpp-ex uses two headers one for the defaults and one for the updates profile-diff s which are separated using md5 hashes. a third header carries warning information. the protocol is documented in the w3c note cc pp exchange protocol based on http extension framework the cc pp framework is a mechanism for describing the capabilities and preferences associated with users and user agents accessing the world wide web. information about user agents includes the hardware platform system software applications and user preferences. the user agent capabilities and preferences can be thought of as metadata or properties and descriptions of the user agent s hardware and software. the cc pp descriptions are intended to provide information necessary to adapt the content and the content delivery mechanisms to best fit the capabilities and preferences of the user and its agents. the major disadvantage of this format is that it is verbose. some networks are very slow and this would be a moderately expensive way to handle metadata. there are several optimizations possible to help deal with network performance issues. one strategy is to use a compressed form of xml and a complementary strategy is to use references uris instead of enumerating each set of attributes a reference can be used to name a collection of attributes such as the hardware platform defaults. this has the advantage of enabling the separate fetching and caching of functional subsets. another problem is to propagate changes to the current cc pp descriptions to an origin server a gateway or a proxy. one solution is to transmit the entire cc pp descriptions with each change. this is not ideal for slow networks. an alternative is to send only the changes. the cc pp exchange protocol does not depend on the profile format that it conveys. therefore another profile format besides the cc pp description format could be applied to the cc pp exchange protocol. for example a user agent issues a request with uris which address the profile information and if the user agent changes the value of an attribute such as turning sound off only that change is sent together with the uris. when an origin server receives the request the origin server inquires of cc pp repositories the cc pp descriptions using the list of uris. then the origin server creates a tailored content using the fully enumerated cc pp descriptions. the origin server might not obtain the fully enumerated cc pp descriptions when any one of the cc pp repositories is not available. in this case it depends on the implementation whether the origin server should respond to the request with a tailored content a non-tailored content or an error. in any case the origin server should inform the user agent of the fact. a warning mechanism has been introduced for this purpose. it is likely that an origin server a gateway or a proxy will be concerned with different device capabilities or user preferences. for example the origin server may have responsibility to select content according to the users preferred language while the proxy may have responsibility to transform the encoding format of the content. therefore gateways or proxies might not forward all profile information to an origin server. the cc pp exchange protocol might convey natural language codes within header field-values. therefore internationalization issues must be considered. the internationalization policy of the cc pp exchange protocol is based on rfc2277. considering how to maintain a session like rtsp rfc2326 is worthwhile from the point of view of minimizing transactions i.e. the session mechanism could permit the client to avoid resending the elements of the cc pp descriptions that have not changed since the last time the information was transmitted however a session mechanism would reduce cache efficiency and requires maintaining states between a user agent and an origin server. an extension declaration is used to indicate that an extension has been applied to a message and possibly to reserve a part of the header namespace identified by a header field prefix. the http extension framework introduces two types of extension declaration strength mandatory and optional and two types of extension declaration scope hop-by-hop and end-to-end. which type of the extension declaration strengths and or which type of the extension declaration scopes should be used depends on what the user agent needs to do. the strength of the extension declaration should be mandatory if the user agent needs to obtain an error response when a server an origin server a gateway or a proxy does not comply with the cc pp exchange protocol. the strength of the extension declaration should be optional if the user agent needs to obtain the non-tailored content when a server does not comply with the cc pp exchange protocol. the scope of the extension declaration should be hop-by-hop if the user agent has a priori knowledge that the first hop proxy complies with the cc pp exchange protocol. the scope of the extension declaration should be end-to-end if the user agent has a priori knowledge that the first hop proxy does not comply with the cc pp exchange protocol or the user agent does not use a proxy. the profile header field is a request-header field which conveys a list of references which address cc pp descriptions. the grammar for the profile header field is as follows header field grammar profile profile-field-name 1#reference profile-field-name profile reference absoluteuri profile-diff-name profile-diff-name profile-diff-number profile-diff-digest profile-diff-number 1#digit profile-diff-digest sp md5 message digest encoded by base64 digit any us-ascii digit 0 9 the profile header field-value is a list of references. each reference in the profile header field represents the corresponding entity of the cc pp description. a reference is either an absolute uri or a profile-diff-name. an entity of a cc pp description which is represented by an absoluteuri exists outside of the request and an entity of a cc pp description which is represented by a profile-diff-name exisits inside of the request i.e. in the profile-diff header field. the profile-diff-name in the profile header field addresses a cc pp description in the corresponding profile-diff header within the same request. when the profile header field includes a profile-diff-name the corresponding profile-diff header must be included within the same request. the main reason why the profile-diff-name is introduced is to specify the priority of each cc pp description in the profile header field-value. the priority is indicated by the order of references i.e. absoluteuri or profile-diff-name in the profile header field-value. the latest reference in the profile header field-value has the highest priority. therefore a cc pp description which is represented by the latest reference can override cc pp descriptions which are represented by the precedent references. this is the default behavior in the absence of schema rules. all profile information could be represented by absoluteuris in the profile header. in this case the profile-diff header field does not have to be added to the request. on the other hand only one profile-diff header can contain all profile information. in this case the profile header includes only the profile-diff-name which indicates the profile-diff header. 3.2 w-http the wap forum uaprof group has defined a transport for cc pp over w-http wireless profiled http it can be found in section 9 of the uaprof specification. in the case where the mobile terminal supports wireless profiled http the profile is transported using meta data defined by this specification. the cc pp framework remains unaltered. the defined mechanism provides a functional equivalent for the cc pp exchange protocol ccpp-ex but the definition of the syntax and semantics of the transport remains in this specification. 3.2.1 using w-http to transport cc pp the following extension headers are defined to transport cc pp in w-http. the defined extension headers are considered to be end to end headers.. 3.2.1.1 x-wap-profile the x-wap-profile header is a general header field which must contain the following a uri referencing the cc pp profile or a reference to a profile difference transported using the x-wap-profile-diff or a combination of multiple instances of these two types of data. this data may be generated by the mobile terminal or attached by an intermediary point in a request to an origin server. in the case of push this header may be generated as a response to a request. in the case of push this data may be cached. however this header must be present in any request or response when uaprof is used. the x-wap-profile header may contain references to instances of the x-wap-profile-diff header defined in the following section each reference contains two parts the sequence number and the profile-digest. the sequence number is used to determine the order of how the x-wap-profile-diff headers should be applied and the digest is used to validate that the profile-desc in the x-wap-profile-diff header value is correct. 3.2.1.2. x-wap-profile-diff the x-wap-profile-diff header is a general header and may be generated by the mobile terminal or an intermediate proxy to enhance or alter the cpi. there may be multiple profile differences each profile difference must also have a reference in the x-wap-profile header which indicates the order in which differences should be applied. this header contains two parts a sequence identifier and the entity which represents the part of the cc pp description that is being enhanced. this header may be present in a request or response. in the case of push this data may be cached. 3.2.1.3. x-wap-profile-warning the x-wap-profile-warning header is a general header. essentially it is the same as the x-wap-profile-warning header in the cc pp exchange protocol. its presence indicates the level to which the response has been tailored in relation to profile data that has been supplied in the request. this header may be present in a request or response. the warning codes that are defined fall into the following categories 1xx reserved 100 reserved 2xx indicates whether the content has been adapted depending on the profile 5xx indicates the server is incapable of processing cpi. the x-wap-profile-warning may have the following values. 200not applied this value must be included if the content has not been tailored and is sent in a representation which is the only representation available in the server. 201content selection applied must be included if the included content has been selected from one of the representations available. 202 content generation applied must be included if the content has been tailored or generated as a result of applying the included profile. 203 transformation applied must be added by an intermediate proxy if it applies any transformation changing the content-coding based on the cpi data. 500not supported indicates that the entity sending this warning code does not support uaprof. 3.2.1.4. protocol procedures 3.2.1.4.1. over the air in this transport variant the headers and their values are not compressed for over the air transmission. it is recommended that the hardware and software manufacturer only use the x-wap-profile header to indicate an absoluteuri as the reference for cpi for the mobile terminal when transmitted over the air. however this specification does not preclude the use x-wap-profile-diff in this case. 3.2.1.4.2. combining x-wap-profile and x-wap-profile-diff if the x-wap-profile-diff header is included the profile-diff-seq must match a sequence number in the x-wap-profile header otherwise the associated profile-diff-desc must not be processed. the reference to each x-wap-profile-diff header contains two parts a sequence number which governs the order in which the x-wap-profile-diff headers are processed and an md5 message digest which is used to validate the profile-desc which is contained in the x-wap-profile-diff. if either the sequence or the md5 validation do not match the particular profile-diff must be ignored. if the x-wap-profile-diff header is added by an intermediate proxy it must not alter the existing sequence of x-wap-profile-diff headers the proxy must append using the next available sequence number in numeric order. the digest associated with an x-wap-profile-diff must be generated by applying md5 message digest algorithm rfc1321 and base64 algorithm section 6.8 in the mime specification rfc2045 to the corresponding profile-desc part of the header field-value. the md5 algorithm takes as input a message of arbitrary length and produces as output a 128-bit fingerprint or message digest of the input. the base64 algorithm takes as input arbitrary binary data and produces as output printable encoding data of the input. 3.2.1.5. relationship with http headers the profile information referred to in the x-wap-profile and x-wap-profile-diff header does not supersede http request or response header information. 3.2.1.5.1. caching the x-wap-profile-warning header must not be used for cache control purposes. if a server wishes to indicate a caching dependency based on these headers then hit should use the vary header as defined in section 14.44 of the http 1.1 specification http 1.1 3.3 xml protocol soap how cc pp will be transported and handled in of xml protocol soap is not clear. this is something the working group wishes to investigate further. 3.4 other protocols the wap forum has provided a mapping to the headers of wsp the wireless session protocol defined in the wap uaprof specification work is also ongoing in 3gpp to transport cc pp over rsvp. 4.use cases 4.1 http use case since cc pp is intended to be protocol neutral it will work with any protocol which can transport it. mappings have been produced for other protocols most notably wsp. however it is to be expected that it will be implemented for http using http headers as a transport. the working group also intends to look at the transport of cc pp over soap xml protocol as a future work item. 4.1.1 trust mechanisms policy publishing does not bring trust by itself. trust has to be obtained in other ways before it is even worth the trouble to publish a policy. in this context p3p should rather be seen as a means to retrieve the user s consent for data storage and or processing. it enables the client to retrieve a policy declaration from the server and match this with the preferences of the client. however p3p is not defined for other protocols than http. no other mechanisms exist to our knowledge to communicate policies between client and server. note however the known problem that p3p does nothing to enforce the policy this is assumed to take place out of band. 4.1.2 using p3p with http in the document cc pp exchange protocol ccpp-ex based on http extension framework httpext a mechanism to transport cc pp over http is described. this document describes how that interaction could take place given a p3p interaction as well. before a policy can be exchanged the client must request it from a server. if this is not a proxy in a trusted domain the client will expose his profile to a possibly malicious party if the cc pp exchange protocol is used since the profile is sent in its entirety with the first get request. thus a malicious server could take this profile and do anything it wanted with it since no relationship has been established. one solution to this is to transmit a minimal profile as part of the first request as described in pemi when the policy has been received and approved a full profile is sent as a profile-diff note that if the policy is rejected there is currently no way for the server to maintain a state over users requests and there is no way for the server to recognize that the client does not approve of the policy since there is no fallback method in p3p. note that it is possible for the profile declared to be a null profile i.e. without content and the correct profile to be transferred as a diff upon approval of the servers policy. note also that the state management mechanism in the server is currently is not specified. it should be possible to use cookies for this although the ramifications of a discussion of this would lead too far. the interaction with p3p might have two levels of granularity a where the privacy policy includes all cc pp vocabulary generic statement stating that all data in the profile and profile diff headers will not be retained or misused or will be used only for the purposes of content customization b where the policy specifically states what attributes data elements from the cc pp vocabulary is collected and state the purpose. this can be extended at a later date to include negotiation capabilities which is currently out of the scope of p3p1.0 or alternately the user agent can be smart enough to parse these elements out and send only those attributes as indicated in the policy in the profile and profile diff headers following the acceptable of the site s policy. 4.1.2.1 p3p and cc pp vocabularies the p3p vocabulary is defined in xml. the cc pp vocabularies are defined in rdf using the xml encoding of rdf the p3p specification p3p declares that an rdf encoding will be made available when this happens p3p elements can be used inside cc pp profiles and vice versa for further information on mixing namespaces in profiles see ccpp and ccpp-vocab since this effort has been advertised the cc pp working group has decided not to create any mapping of their own but await the p3p working group efforts. an alternative solution is to create a cc pp data schema in the p3p syntax but that would seem redundant if an rdf version of p3p is forthcoming. the two working groups will continue to investigate this. 4.1.2.2 safe zone the p3p specification defines a concept of a safe zone this concept does not exist a priori in cc pp since no protocol has been defined. however the pimi method as described in section 5.1 can be used to provide a safe zone in the way that is indicated in the p3p specification section 2.4.3. as noted above an empty profile can be used while negotiating within the safe zone instead of a minimal one. 4.1.2.3 appel no rules language is defined for cc pp. existing implementations make use of xslt to predicate transformations using xpath profile documents can be addressed from within a style sheet in the future it is foreseen that there will be a need for a more extensive rule system such that decisions can concern not just the formatting but the content itself as well. in that regard synergies with the appel rules language for p3p could be investigated. 4.2 use of trusted intermediaries in the cc pp exchange protocol profiles can be referenced and retrieved by an intermediary a gateway or other proxy it is also possible that this entity could handle the p3p negotiations if a mechanism to delegate authority to it existed and end-to-end security was not required. this may occur in situations where the user is in a trusted domain which is interfaced with the internet through the proxy or gateway. in this case the p3p negotiation will be terminated in the proxy. it will also be necessary for the proxy not just to keep a cache of documents but to maintain a database of user state. it may even be necessary for the proxy to become the entity which performs not just transcoding but also personalization on behalf of the origin server. the advantage for the user of this would be that the personal information including the cc pp profile stays in the trusted proxy. the advantage for the origin server owner is harder to identify since the version of the document which has to be delivered will have to be universal and there will not be any record of the number of retrievals who retrieved it etc which conversely can be seen as a privacy enhancement for the user as this type of system continues to emerge e.g. in the scope of the ietf webi and apex working groups we foresee that the issue will become more important. however since the mechanism is transparent to http and since it can be for cc pp we will not discuss it to any further extent here. 5. examples 5.1 using p3p with cc pp exchange protocol using thepimi method the idea behind the pimi method is that the client has defined a minimal profile with non-contentious information which cannot be used to infringe on the privacy of the client this minimal profile is used in an initial request to get the privacy policy of the server. as demonstrated below using the profile-diff headers of the cc pp exchange protocol it becomes possible for the client to signal satisfaction or dissatisfaction with the policy by returning a profile difference or not. in response to the empty diff the server can provide a document which does not contain the adaption which would have been done using the information which the client will not reveal. what constitutes a minimal profile is most likely subjective. ultimately the user will have to determine what information he or she wants to give out. however for the purposes of discussion we will assume that the properties which enable a generic display and data input on the device without expressing any preferences and without any modifications will constitute a minimum. that would imply the following using the properties defined by the wap uaprof drafting committee screen size color capable in this document we propose that an empty diff be sent as response in a second get which would imply that the profile has not changed. depending on the implementation the server could return a document containing a different information set than the user would have got if he had accepted the policy or returned nothing. this is not specified in the p3p specification and out of scope for the cc pp work. this would apply when the client initially contacted the server during a session. during the rest of the session it would be able to refer to the policy first retrieved or to follow-up policies which can be added later during a session using the link tag in http using a well-known location or an http header the interactions would look as follows 1. client sends request with minimal profile to server. this request can be directed to the well-known location of the p3p reference file w3c p3p.xml. it can also be directed at another location if this has been indicated in a link tag in a document that references this server. the reference file is returned. after that another request will retrieve the policy file. 2. server returns policy. 3. client reads policy and matches against own rule set 3 client approves policy sends diff with full information or a get with full information directed at the uri where the document resides if the policy was retrieved from the well-known or link-ed location 4 client receives document 3 client rejects policy resends request with empty diff 4 client receives less important document. with protocol interactions this would look as follows 1. client sends request with minimal profile to server. get a-resource http 1.1 host www.w3.org opt http www.w3.org tr note-ccppexchange ns 19 19-profile http www.aaa.com hw http www.bbb.com sw 1-ukhje aeeemzfsejsyshhg accept accept-language de en 2. server returns policy. http 1.1 200 ok p3p policyref http catalog.example.com p3p policyreferences.xml content-type text html content-length 7413 server cc-galaxy 1.3.18 3. client reads policy and matches against own rule set not shown 3 client approves policy sends diff with full information get a-resource http 1.1 host www.w3.org opt http www.w3.org tr note-ccppexchange ns 19 19-profile http www.aaa.com hw http www.bbb.com sw 1-ukhje aeeemzfsejsyshhg 19-profile-diff-1 xml version 1.0 rdf xmlns http www.w3.org tr pr-rdf-syntax xmlns prf http www.example.org tr wd-profile-vocabulary# description id softwareplatform prf sound on rdf 4 client receives document not shown 3 client rejects policy resends request with empty diff get a-resource http 1.1 host www.w3.org opt http www.w3.org tr note-ccppexchange ns 19 19-profile http www.aaa.com hw http www.bbb.com sw 1-ukhje aeeemzfsejsyshhg 19-profile-diff-1 4 client receives less important document not shown 6. references httpext http extension framework http 1.1 http 1.1 rev6 cc pp composite capability preference profiles cc pp a user side framework for content negotiation rdf resource description framework rdf model and syntax specification rdf-schema resource description framework rdf schema specification p3p platform for privacy preferences p3p project rfc2396 rfc 2396 uniform resource identifiers uri generic syntax ccpp-ex cc pp exchange protocol based on http extension framework pemi privacy enhancements in the mobile internet mikael nilsson helena lindskog simone fischer-huebner karlstad university. pdf format ccpp-vocab w3c note cc pp implementers guide harmonization with existing vocabularies and content transformation heuristics to be appeared. appendix basic requirements for trust management frameworks a.1 basic requirements the basic requirements for the cc pp trust management framework which were discussed in the 1999 version of this document are listed below. a client must be able to discover the privacy practices of an origin server before revealing private profile information the privacy mechanism must be separable from cc pp framework so that the user has a choice of whether or not privacy mechanism is to be used. in other words enable cc pp content negotiation with or without privacy the protocol must allow each client individually to determine what information is private any or all of the profile can be considered private. what may be a private piece of information for one user may not be so for another. since cc pp is protocol independent the privacy mechanism should also be supported on various transport protocols including http mime smtp etc a client must be able to interact with a server to the point of discovering its privacy policy without having to disclose any particular item of information. for example a user agent first sends non-private profile data to a server which then responds with a privacy policy as a result of which the user agent may either choose to send or not send any additional private information to the server for the purposes of receiving tailored content. it should be possible for the origin server to render content best effort if the private information is not shared by the user. intermediate proxies servers and gateways asserting profile data must also honor the privacy needs of the user. in other words if the user deems a profile attribute to be private an intermediate proxy must not disclose that attribute in its profile diff. may require user-agent side privacy capability e.g. p3p user agents must be supported by such servers proxies gateways. as with cc pp mechanism the private profile must also support. additions and overrides by other network elements as specified in the cc pp specs inline or uri indirect references to the profile information the privacy mechanism should support the split client model. thin clients such as for low-end devices on a mobile network for example may not be able to support the necessary mechanism for privacy e.g. p3p user agent perhaps due to overhead. such a function should be enabled on a gateway or proxy that acts on behalf of the thin client. is this within the scope of our work any requirements relative to p3p policy asserted by servers to be in xml versus rdf formats the privacy mechanism must be independent of and separable from security mechanisms. in other words it should be possible to transmit private cc pp profile information with or without security. the combined system of capability profiles and privacy practice declarations must work in the presence of information caches without leaking private information to parties who have not agreed to treat it properly. a.2 p3p and the requirements for the trust mechanism this is an uow.acc.tab.analysis of how the proposed use of p3p would fulfill the basic requirements for the cc pp trust management framework section 3 a client must be able to discover the privacy practices of an origin server before revealing private profile information fulfilled provided no private information is transmitted.. the privacy mechanism must be separable from cc pp framework so that the user has a choice of whether or not privacy mechanism is to be used. in other words enable cc pp content negotiation with or without privacy protocol dependent. not possible in the examples given. the protocol must allow each client individually to determine what information is private any or all of the profile can be considered private. what may be a private piece of information for one user may not be so for another. fulfilled provided appel a similar rules language or a proprietary solution in the device can be applied to profile construction or various profiles can be selected i.e. not in this version. since cc pp is protocol independent the privacy mechanism should also be supported on various transport protocols including http mime smtp etc not fulfilled p3p can be used with other protocols than http as noted in the specification but how has not been specified a client must be able to interact with a server to the point of discovering its privacy policy without having to disclose any particular item of information. for example a user agent first sends non-private profile data or an empty profile to a server which then responds with a privacy policy as a result of which the user agent may either choose to send or not send any additional personal information to the server for the purposes of receiving tailored content. fulfilled. it should be possible for the origin server to render content best effort if the private information is not shared by the user. fulfilled intermediate proxies servers and gateways asserting profile data must also honor the privacy needs of the user. in other words if the user deems a profile attribute to be private an intermediate proxy must not disclose that attribute in its profile diff. fulfilled if the method above is used.. may require user-agent side privacy capability e.g. p3p user agents must be supported by such servers proxies gateways. fulfilled although this is actually a strange requirement as with cc pp mechanism the private profile must also support. additions and overrides by other network elements as specified in the cc pp specs inline or uri indirect references to the profile information not fulfilled. the privacy mechanism should support the split client model. thin clients such as for low-end devices on a mobile network for example may not be able to support the necessary mechanism for privacy e.g. p3p user agent perhaps due to overhead. such a function should be enabled on a gateway or proxy that acts on behalf of the thin client. is this within the scope of our work fulfilled not sure any requirements relative to p3p policy asserted by servers to be in xml versus rdf formats not sure what this requirement means. the privacy mechanism must be independent of and separable from security mechanisms. in other words it should be possible to transmit private cc pp profile information with or without security. fulfilled. the combined system of capability profiles and privacy practice declarations must work in the presence of information caches without leaking private information to parties who have not agreed to treat it properly. not fulfilled since proxies can still be transparent 