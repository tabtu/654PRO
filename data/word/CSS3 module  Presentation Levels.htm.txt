css3 module presentation levels css3 module presentation levels w3c working draft 13 august 2003 this version http www.w3.org tr 2003 wd-css3-preslev-20030813 latest version http www.w3.org tr css3-preslev editors ian hickson ian hixie.ch h kon wium lie howcome opera.com copyright 2003 w3c mit ercim keio all rights reserved. w3c liability trademark document use and software licensing rules apply. abstract presentation levels are integer values attached to elements in a document. elements that are below at or above a certain threshold can be styled differently. this feature has two compelling use cases. first slide presentations with transition effects can be described. for example list items can be progressively revealed by sliding in from the side. second outline views of documents where only the headings to a certain level are visible can be generated. status of this document this section describes the status of this document at the time of its publication. other documents may supersede this document. a list of current w3c publications and the latest revision of this technical report can be found in the w3c technical reports index at http www.w3.org tr this document is a working draft of the css working group which is part of the style activity see summary the working group believes this draft describes useful functionality for presenting web documents. comments on and discussions of this draft can be sent on the archived public mailing list www-style@w3.org see instructions w3c members can also send comments directly to the css working group. it is inappropriate to use w3c working drafts as reference material or to cite them as other than work in progress its publication does not imply endorsement by the w3c membership or the css working group members only patent disclosures relevant to css may be found on the working group s public patent disclosure page. table of contents 1. the model 2. the presentation-level property 3. example 1 progressively revealing list items 4. example 2 presenting outline views of a document 5. presentation levels and the dom 1. the model content reuse has been one of the main motivations for the development of style sheets. by associating documents with different style sheets the same content can be presented in different ways. the introduction of presentation levels in css adds functionality which is very useful in two particular settings. first slide presentations with transition effects can be described. for example list items can be progressively revealed by sliding in from the side. second outline views of documents where only the headings to a certain level are visible can be generated. the model behind presentation levels is simple. each element in the document is assigned an integer value which is referred to as the element s presentation level epl the epl can be set explicitly in a style sheet or calculated automatically based on the element s position in the document structure it is specified by the computed value of the presentation-level property. the user agent maintains another integer value which is called the user agent presentation value uapl the uapl starts at a ua-defined value typically 0. all elements are in one of three presentation pseudo-classes below-level at-level and above-level these pseudo-classes refer to whether the element s epl was below at or above the uapl the last time the uapl changed. when an element s state is evaluated the epl is compared to the uapl and pseudo-classes are assigned as follows if the epl is equal to 0 the element is always in the below-level state. if the epl is lower than the uapl value it is set to the below-level state if the epl is exactly that value it is set to at-level and if the epl is greater than that value it is set to above-level here is an example of a style sheets using the presentation pseudo-classes below-level color black at-level color red above-level color silver this proposal does not describe the user interface of presentation levels. the user agent will need to provide a user interface for setting the uapl. for example in projection mode a user agent may increase the uapl every time the user hits the space bar. when the user moves to another page for example by following a hyperlink the user agent may set the uapl to be the same as presentation level of the first element on the page. in outline mode the user agent may provide a vertical slider on the side to increase decrease the uapl. 2. the presentation-level property name presentation-level value integer same increment initial 0 applies to all elements inherited yes percentages n a media all computed value integer this property sets the element s presentation level epl the values have the following meanings an integer value sets the presentation level explicitly. a value of increment computes to a value one more than the previous in document order element s presentation level. a value of same computes to the same value as the previous element s in document order presentation level. for the root element same computes to zero. 3. example 1 progressively revealing list items here is an example of how presentation levels can be used to progressively reveal list items while high-lighting the current one. epl value doctype html public w3c dtd html 4.0 en html 0 style 0 html color black background white media projection h1 page-break-before always li presentation-level increment below-level color black at-level color red above-level color silver style body 0 h1 strategies h1 0 h2 our strategy h2 0 ul 0 li divide 1 li conquer 2 p in that order 2 ul h2 their strategy h2 0 ul 0 li obfuscate 1 li propagate 2 ul in the example above the li elements epl value is increased with one compared to the previous element. the other elements epl value is the same as the previous element due to the initial same value of the presentation-level property. 4. example 2 presenting outline views of a document here is an example of how presentation levels can be used to present outline views of a document epl value doctype html public w3c dtd html 4.0 en html 0 style h1 presentation-level 0 h2 presentation-level 1 h3 presentation-level 2 body presentation-level 3 above-level display none style body 0 h1 strategies h1 3 h2 our strategy h2 2 ul 0 li divide 0 li conquer 0 p in that order 0 ul h2 their strategy h2 2 ul 0 li obfuscate 0 li propagate 0 ul 5. presentation levels and the dom an element s state is first evaluated when it is created. when the uapl is changed all elements in the document have their state reevaluated. a cssnowbelowlevel event is then sent to all elements that changed to the below-level state a cssnowatlevel event is then sent to all elements that changed to the at-level state and a cssnowabovelevel event is then sent to all elements that changed to the above-level state. changing an element s presentation-level property e.g. through the dom or using a dynamic pseudo-class does not cause the element s state to be immediately reevaluated. these events have the following characteristics bubbles yes cancelable no context info detail the uapl smil can be used with this event to declaratively key animations from user requests based on the presentation-index property. the events are defined as interface cssnowbelowlevel uievent interface cssnowatlevel uievent interface cssnowabovelevel uievent these three fragments together will cause a document to have three user-triggered list items which will scroll in one at a time each time the user hits the space bar or whatever mechanism the ua uses with the current item colored white and the past items colored gray. markup ol li the separation of style and structure li li declarative user interaction li li potential for animation li ol stylesheet ol overflow hidden li presentation-level increment margin-left 100 li at-level color white li above-level color silver script when the element is shown scroll it in from the right by animating the margin-left property from 100 to 0 document.documentelement.addeventlistener cssnowatlevel handler false function handler event animatefloat is a fictional library routine which takes five arguments a cssvalue to animate the start value the end value the time over which to animate the property in milliseconds the units to animate it with it returns straight away and performs the animation in the background. animatefloat document.getoverridestyle event.target null getpropertycssvalue margin-left 100 0 1000 css_percentage 